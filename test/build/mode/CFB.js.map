{"version":3,"sources":["webpack://JsCrypto.mode/webpack/universalModuleDefinition","webpack://JsCrypto.mode/webpack/bootstrap","webpack://JsCrypto.mode/./src/lib/algorithm/cipher/mode/BlockCipherMode.ts","webpack://JsCrypto.mode/./src/lib/algorithm/cipher/mode/CFB.ts","webpack://JsCrypto.mode/./src/mode/CFB.ts"],"names":[],"mappings":"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","file":"CFB.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mode\"] = factory();\n\telse\n\t\troot[\"JsCrypto\"] = root[\"JsCrypto\"] || {}, root[\"JsCrypto\"][\"mode\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/mode/CFB.ts\");\n","import type {Cipher} from \"../Cipher\";\n\nexport interface BlockCipherModeProps {\n  cipher: Cipher;\n  iv: number[]|undefined;\n}\n\n/**\n * Abstract base block cipher mode template.\n * @abstract\n */\nexport class BlockCipherMode {\n  protected _props: BlockCipherModeProps;\n  protected _cipher: Cipher;\n  protected _iv?: number[];\n  \n  public constructor(props: BlockCipherModeProps) {\n    this._props = props;\n    this._cipher = props.cipher;\n    this._iv = props.iv;\n  }\n  \n  /**\n   * @abstract\n   */\n  public processBlock(words: number[], offset: number){\n    return;\n  }\n  \n  /**\n   * Creates this mode for encryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = JsCrypto.CBC.createEncryptor(cipher, iv.words);\n   */\n  public static createEncrypter(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n  \n  /**\n   * Creates this mode for decryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = JsCrypto.CBC.createDecryptor(cipher, iv.words);\n   */\n  public static createDecrypter(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n}\n","import {BlockCipherMode, BlockCipherModeProps} from \"./BlockCipherMode\";\nimport {Cipher} from \"../Cipher\";\n\n/**\n * Cipher Feedback Block mode\n */\nexport class CFB extends BlockCipherMode {\n  protected _prevBlock: number[] = [];\n  \n  /**\n   * CFB encryptor.\n   */\n  public static Encrypter: typeof CFB = class Encrypter extends CFB {\n    /**\n     * Processes the data block at offset.\n     *\n     * @param {number[]} words The data words to operate on.\n     * @param {number} offset The offset where the block starts.\n     * @example\n     *   mode.processBlock(data.words, offset);\n     */\n    public processBlock(words: number[], offset: number){\n      this.generateKeyStreamAndEncrypt(words, offset, this._cipher.blockSize, this._cipher);\n  \n      // Remember this block to use with next block\n      this._prevBlock = words.slice(offset, offset + this._cipher.blockSize);\n    }\n  };\n  \n  /**\n   * CFB decryptor.\n   */\n  public static Decrypter: typeof CFB = class Encrypter extends CFB {\n    /**\n     * Processes the data block at offset.\n     *\n     * @param {number[]} words The data words to operate on.\n     * @param {number} offset The offset where the block starts.\n     * @example\n     *   mode.processBlock(data.words, offset);\n     */\n    public processBlock(words: number[], offset: number){\n      // Remember this block to use with next block\n      const thisBlock = words.slice(offset, offset + this._cipher.blockSize);\n  \n      this.generateKeyStreamAndEncrypt(words, offset, this._cipher.blockSize, this._cipher);\n  \n      // This block becomes the previous block\n      this._prevBlock = thisBlock;\n    }\n  };\n  \n  public constructor(props: BlockCipherModeProps) {\n    super(props);\n  }\n  \n  public generateKeyStreamAndEncrypt(words: number[], offset: number, blockSize: number, cipher: Cipher){\n    let keyStream;\n  \n    // Shortcut\n    const iv = this._iv;\n  \n    // Generate keyStream\n    if (iv) {\n      keyStream = iv.slice(0);\n    \n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    else {\n      keyStream = this._prevBlock;\n    }\n    cipher.encryptBlock(keyStream, 0);\n  \n    // Encrypt\n    for (let i = 0; i < blockSize; i++) {\n      words[offset + i] ^= keyStream[i];\n    }\n  }\n  \n  /**\n   * Creates this mode for encryption.\n   * @param {BlockCipherModeProps} props\n   * @example\n   *   var mode = JsCrypto.CFB.createEncryptor(cipher, iv.words);\n   */\n  public static createEncrypter(props: BlockCipherModeProps){\n    return new CFB.Encrypter(props);\n  }\n  \n  /**\n   * Creates this mode for decryption.\n   * @param {BlockCipherModeProps} props\n   * @example\n   *   var mode = JsCrypto.CFB.createDecryptor(cipher, iv.words);\n   */\n  public static createDecrypter(props: BlockCipherModeProps){\n    return new CFB.Decrypter(props);\n  }\n}","export {CFB} from \"../lib/algorithm/cipher/mode/CFB\";\n"],"sourceRoot":""}