{"version":3,"sources":["webpack://JsCrypto/webpack/universalModuleDefinition","webpack://JsCrypto/webpack/bootstrap","webpack://JsCrypto/(webpack)/buildin/global.js","webpack://JsCrypto/./src/Hmac.ts","webpack://JsCrypto/./src/HmacSHA512.ts","webpack://JsCrypto/./src/SHA512.ts","webpack://JsCrypto/./src/lib/Word32Array.ts","webpack://JsCrypto/./src/lib/Word64Array.ts","webpack://JsCrypto/./src/lib/algorithm/BufferedBlockAlgorithm.ts","webpack://JsCrypto/./src/lib/algorithm/Hasher.ts","webpack://JsCrypto/./src/lib/encoder/Hex.ts","webpack://JsCrypto/./src/lib/encoder/Latin1.ts","webpack://JsCrypto/./src/lib/encoder/Utf8.ts","webpack://JsCrypto/./src/lib/random.ts"],"names":[],"mappings":"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UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,uDAAM,CAAC,UAAU,EAAE,UAAU,CAAC;IACtE,IAAI,uDAA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AC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,GAAG,EAAE,CAAC,GAAG,GAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,GAAG,EAAE,CAAC,GAAG,GAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,GAAG,EAAE,CAAC,GAAG,GAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,GAAG,EAAE,CAAC,GAAG,GAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,GAAG,GAAG,EAAE,CAAC,GAAG,GAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,KA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","file":"HmacSHA512.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsCrypto\"] = factory();\n\telse\n\t\troot[\"JsCrypto\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/HmacSHA512.ts\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import {Utf8} from \"./lib/encoder/Utf8\";\nimport type {Hasher} from \"./lib/algorithm/Hasher\";\nimport type {Word32Array} from \"./lib/Word32Array\";\n\nexport class Hmac {\n  private _hasher: Hasher;\n  private _oKey: Word32Array;\n  private _iKey: Word32Array;\n  \n  public constructor(hasher: Hasher, key: Word32Array|string) {\n    this._hasher = hasher;\n  \n    // Convert string to WordArray, else assume WordArray already\n    if (typeof key == \"string\") {\n      key = Utf8.parse(key);\n    }\n    \n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n    \n    // Allow arbitrary length keys\n    if(key.nSigBytes > hasherBlockSizeBytes){\n      key = hasher.finalize(key);\n    }\n  \n    // Clamp excess bits\n    key.clamp();\n    \n    const oKey = this._oKey = key.clone();\n    const iKey = this._iKey = key.clone();\n    \n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n    \n    for(let i=0;i<hasherBlockSize;i++){\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    iKey.nSigBytes = hasherBlockSize;\n    oKey.nSigBytes = hasherBlockSize;\n    \n    // Set initial values\n    this.reset();\n  }\n  \n  /**\n   * Resets this Hmac to its initial state.\n   *\n   * @example\n   *   hmacHasher.reset();\n   */\n  public reset(){\n    this._hasher.reset();\n    this._hasher.update(this._iKey);\n  }\n  \n  /**\n   * Updates this Hmac with a message.\n   *\n   * @param {Word32Array|string} messageUpdate The message to append.\n   * @return {Hmac} This Hmac instance.\n   * @example\n   *   hmacHasher.update('message');\n   *   hmacHasher.update(wordArray);\n   */\n  public update(messageUpdate: Word32Array|string){\n    this._hasher.update(messageUpdate);\n    return this;\n  }\n  \n  /**\n   * Finalizes the Hmac computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {Word32Array|string} messageUpdate (Optional) A final message update.\n   * @return {Word32Array} The Hmac.\n   * @example\n   *   var hmac = hmacHasher.finalize();\n   *   var hmac = hmacHasher.finalize('message');\n   *   var hmac = hmacHasher.finalize(wordArray);\n   */\n  public finalize(messageUpdate: Word32Array|string){\n    const innerHash = this._hasher.finalize(messageUpdate);\n    this._hasher.reset();\n    return this._hasher.finalize(this._oKey.clone().concat(innerHash));\n  }\n}\n","import {Hmac} from \"./Hmac\";\nimport {SHA512} from \"./SHA512\";\nimport type {Word32Array} from \"./lib/Word32Array\";\n\nexport function HmacSHA512(message: Word32Array|string, key: Word32Array|string){\n  return new Hmac(new SHA512(), key).finalize(message);\n}\n","import {Hasher, HasherProps} from \"./lib/algorithm/Hasher\";\nimport {Word64, Word64Array} from \"./lib/Word64Array\";\nimport type {Word32Array} from \"./lib/Word32Array\";\n\nexport interface SHA512Props extends HasherProps {\n  hash: Word64Array;\n}\n\nconst K = [\n  new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd),\n  new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc),\n  new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019),\n  new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118),\n  new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe),\n  new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2),\n  new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1),\n  new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694),\n  new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3),\n  new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65),\n  new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483),\n  new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5),\n  new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210),\n  new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4),\n  new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725),\n  new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70),\n  new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926),\n  new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df),\n  new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8),\n  new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b),\n  new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001),\n  new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30),\n  new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910),\n  new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8),\n  new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53),\n  new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8),\n  new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb),\n  new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3),\n  new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60),\n  new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec),\n  new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9),\n  new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b),\n  new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207),\n  new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178),\n  new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6),\n  new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b),\n  new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493),\n  new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c),\n  new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a),\n  new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817),\n];\n\nconst W: Word64[] = [];\n\n(function computeConstants(){\n  for(let i=0;i<80;i++){\n    W[i] = new Word64(0, 0);\n  }\n})();\n\nexport class SHA512 extends Hasher {\n  protected _props?: Partial<SHA512Props>;\n  protected _blockSize = 1024/32;\n  protected _hash: Word64Array = new Word64Array([\n    new Word64(0x6a09e667, 0xf3bcc908), new Word64(0xbb67ae85, 0x84caa73b),\n    new Word64(0x3c6ef372, 0xfe94f82b), new Word64(0xa54ff53a, 0x5f1d36f1),\n    new Word64(0x510e527f, 0xade682d1), new Word64(0x9b05688c, 0x2b3e6c1f),\n    new Word64(0x1f83d9ab, 0xfb41bd6b), new Word64(0x5be0cd19, 0x137e2179)\n  ]);\n  \n  public constructor(props?: Partial<SHA512Props>) {\n    super(props);\n    this._props = props;\n    if(props && typeof props.hash !== \"undefined\"){\n      this._hash = props.hash.clone();\n    }\n  }\n  \n  protected _doReset() {\n    this._hash = new Word64Array([\n      new Word64(0x6a09e667, 0xf3bcc908), new Word64(0xbb67ae85, 0x84caa73b),\n      new Word64(0x3c6ef372, 0xfe94f82b), new Word64(0xa54ff53a, 0x5f1d36f1),\n      new Word64(0x510e527f, 0xade682d1), new Word64(0x9b05688c, 0x2b3e6c1f),\n      new Word64(0x1f83d9ab, 0xfb41bd6b), new Word64(0x5be0cd19, 0x137e2179)\n    ]);\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    // Shortcuts\n    const H = this._hash.words;\n  \n    const H0 = H[0];\n    const H1 = H[1];\n    const H2 = H[2];\n    const H3 = H[3];\n    const H4 = H[4];\n    const H5 = H[5];\n    const H6 = H[6];\n    const H7 = H[7];\n  \n    const H0h = H0.high;\n    let H0l = H0.low;\n    const H1h = H1.high;\n    let H1l = H1.low;\n    const H2h = H2.high;\n    let H2l = H2.low;\n    const H3h = H3.high;\n    let H3l = H3.low;\n    const H4h = H4.high;\n    let H4l = H4.low;\n    const H5h = H5.high;\n    let H5l = H5.low;\n    const H6h = H6.high;\n    let H6l = H6.low;\n    const H7h = H7.high;\n    let H7l = H7.low;\n  \n    // Working variables\n    let ah = H0h;\n    let al = H0l;\n    let bh = H1h;\n    let bl = H1l;\n    let ch = H2h;\n    let cl = H2l;\n    let dh = H3h;\n    let dl = H3l;\n    let eh = H4h;\n    let el = H4l;\n    let fh = H5h;\n    let fl = H5l;\n    let gh = H6h;\n    let gl = H6l;\n    let hh = H7h;\n    let hl = H7l;\n  \n    // Rounds\n    for (let i=0;i<80;i++) {\n      let Wil: number;\n      let Wih: number;\n      \n      // Shortcut\n      const Wi = W[i];\n    \n      // Extend message\n      if (i < 16) {\n        Wih = Wi.high = words[offset + i * 2]    | 0;\n        Wil = Wi.low = words[offset + i * 2 + 1] | 0;\n      }\n      else {\n        // Gamma0\n        const gamma0x  = W[i - 15];\n        const gamma0xh = gamma0x.high;\n        const gamma0xl = gamma0x.low;\n        const gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31))\n          ^ ((gamma0xh >>> 8) | (gamma0xl << 24))\n          ^ (gamma0xh >>> 7);\n        const gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31))\n          ^ ((gamma0xl >>> 8) | (gamma0xh << 24))\n          ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n      \n        // Gamma1\n        const gamma1x  = W[i - 2];\n        const gamma1xh = gamma1x.high;\n        const gamma1xl = gamma1x.low;\n        const gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13))\n          ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n        const gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13))\n          ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n      \n        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n        const Wi7  = W[i - 7];\n        const Wi7h = Wi7.high;\n        const Wi7l = Wi7.low;\n      \n        const Wi16  = W[i - 16];\n        const Wi16h = Wi16.high;\n        const Wi16l = Wi16.low;\n      \n        Wil = gamma0l + Wi7l;\n        Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n        Wil = Wil + gamma1l;\n        Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n        Wil = Wil + Wi16l;\n        Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n      \n        Wi.high = Wih;\n        Wi.low = Wil;\n      }\n    \n      const chh  = (eh & fh) ^ (~eh & gh);\n      const chl  = (el & fl) ^ (~el & gl);\n      const majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n      const majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n    \n      const sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n      const sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n      const sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n      const sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n    \n      // t1 = h + sigma1 + ch + K[i] + W[i]\n      const Ki  = K[i];\n      const Kih = Ki.high;\n      const Kil = Ki.low;\n    \n      let t1l = hl + sigma1l;\n      let t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n      t1l = t1l + chl;\n      t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n      t1l = t1l + Kil;\n      t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n      t1l = t1l + Wil;\n      t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n    \n      // t2 = sigma0 + maj\n      const t2l = sigma0l + majl;\n      const t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n    \n      // Update working variables\n      hh = gh;\n      hl = gl;\n      gh = fh;\n      gl = fl;\n      fh = eh;\n      fl = el;\n      el = (dl + t1l) | 0;\n      eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n      dh = ch;\n      dl = cl;\n      ch = bh;\n      cl = bl;\n      bh = ah;\n      bl = al;\n      al = (t1l + t2l) | 0;\n      ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n    }\n  \n    // Intermediate hash value\n    H0l = H0.low  = (H0l + al);\n    H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n    H1l = H1.low  = (H1l + bl);\n    H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n    H2l = H2.low  = (H2l + cl);\n    H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n    H3l = H3.low  = (H3l + dl);\n    H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n    H4l = H4.low  = (H4l + el);\n    H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n    H5l = H5.low  = (H5l + fl);\n    H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n    H6l = H6.low  = (H6l + gl);\n    H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n    H7l = H7.low  = (H7l + hl);\n    H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n  }\n  \n  protected _doFinalize(): Word32Array {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n  \n    const nBitsTotal = this._nBytes * 8;\n    const nBitsLeft = data.nSigBytes * 8;\n  \n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n    dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n    data.nSigBytes = dataWords.length * 4;\n  \n    // Hash final blocks\n    this._process();\n  \n    // Convert hash to 32-bit word array before returning\n    return this._hash.to32();\n  }\n  \n  public clone(){\n    const props = {hash: this._hash, blockSize: this._blockSize, data: this._data, nBytes: this._nBytes};\n    return new SHA512(props);\n  }\n  \n  public static hash(message: Word32Array|string, props?: SHA512Props){\n    return new SHA512(props).finalize(message);\n  }\n}\n","import type {IEncoder} from \"./type\";\nimport {Hex} from \"./encoder/Hex\";\nimport {random} from \"./random\";\n\n/**\n * An array of 32bit words\n */\nexport class Word32Array {\n  private readonly _words: number[];\n  private _nSignificantBytes: number;\n  \n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} nSignificantBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *   var wordArray = new WordArray();\n   *   var wordArray = new WordArray([0x00010203, 0x04050607]);\n   *   var wordArray = new WordArray([0x00010203, 0x04050607], 6);\n   */\n  public constructor(words?: number[], nSignificantBytes?: number) {\n    this._words = words || [];\n    this._nSignificantBytes = typeof nSignificantBytes === \"number\" ? nSignificantBytes : this._words.length * 4;\n  }\n  \n  public get nSigBytes(){\n    return this._nSignificantBytes;\n  }\n  \n  /**\n   * Set significant bytes\n   * @param {number} n - significant bytes\n   */\n  public set nSigBytes(n: number){\n    this._nSignificantBytes = n;\n  }\n  \n  /**\n   * Get raw reference of internal words.\n   * Modification of this raw array will affect internal words.\n   */\n  public get words(){\n    return this._words;\n  }\n  \n  /**\n   * Converts this word array to a string.\n   *\n   * @param {IEncoder?} encoder The encoding strategy to use. Default: CryptoJS.enc.Hex\n   * @return {string} The stringified word array.\n   * @example\n   *   var string = wordArray + '';\n   *   var string = wordArray.toString();\n   *   var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  public toString(encoder?: IEncoder){\n    if(!encoder){\n      return Hex.stringify(this);\n    }\n    return encoder.stringify(this);\n  }\n  \n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {Word32Array} w The word array to append.\n   * @return {Word32Array} This word array.\n   * @example\n   *   wordArray1.concat(wordArray2);\n   */\n  public concat(w: Word32Array){\n    const words = w.words.slice();\n    const N = w.nSigBytes;\n    \n    this.clamp();\n  \n    if(this._nSignificantBytes % 4){\n      // Copy one byte at a time\n      for(let i=0;i<N;i++){\n        const b = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        this._words[(this._nSignificantBytes + i) >>> 2] |= b << (24 - ((this._nSignificantBytes + i) % 4) * 8);\n      }\n    }\n    else {\n      // Copy one word at a time\n      for(let i=0;i<N;i+=4) {\n        this._words[(this._nSignificantBytes + i) >>> 2] = words[i >>> 2];\n      }\n    }\n    \n    this._nSignificantBytes += N;\n  \n    // Chainable\n    return this;\n  }\n  \n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *   wordArray.clamp();\n   */\n  public clamp(){\n    const n = this._nSignificantBytes;\n    this._words[n >>> 2] &= 0xffffffff << (32 - (n % 4) * 8);\n    this._words.length = Math.ceil(n / 4);\n  }\n  \n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {Word32Array} The clone.\n   * @example\n   *   var clone = wordArray.clone();\n   */\n  public clone(){\n    return new Word32Array(this._words.slice(), this._nSignificantBytes);\n  }\n  \n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   * @return {Word32Array} The random word array.\n   * @static\n   * @example\n   *   var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  public static random(nBytes: number){\n    const words: number[] = [];\n    \n    for(let i=0;i<nBytes;i++){\n      words.push(random());\n    }\n    \n    return new Word32Array(words, nBytes);\n  }\n}\n","import type {IEncoder} from \"./type\";\nimport {Hex} from \"./encoder/Hex\";\nimport {Word32Array} from \"./Word32Array\";\n\nexport class Word64 {\n  public high: number;\n  public low: number;\n  \n  public constructor(high: number, low: number) {\n    this.high = high;\n    this.low = low;\n  }\n  \n  public clone(){\n    return new Word64(this.high, this.low);\n  }\n}\n\n/**\n * An array of 64bit words\n */\nexport class Word64Array {\n  private readonly _words: Word64[];\n  private _nSignificantBytes: number;\n  \n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} nSignificantBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *   var wordArray = new WordArray();\n   *   var wordArray = new WordArray([0x00010203, 0x04050607]);\n   *   var wordArray = new WordArray([0x00010203, 0x04050607], 6);\n   */\n  public constructor(words?: Word64[], nSignificantBytes?: number) {\n    this._words = words || [];\n    this._nSignificantBytes = typeof nSignificantBytes === \"number\" ? nSignificantBytes : this._words.length * 8;\n  }\n  \n  public get nSigBytes(){\n    return this._nSignificantBytes;\n  }\n  \n  /**\n   * Set significant bytes\n   * @param {number} n - significant bytes\n   */\n  public set nSigBytes(n: number){\n    this._nSignificantBytes = n;\n  }\n  \n  /**\n   * Get raw reference of internal words.\n   * Modification of this raw array will affect internal words.\n   */\n  public get words(){\n    return this._words;\n  }\n  \n  /**\n   * Converts this 64-bit word array to a 32-bit word array.\n   *\n   * @return {Word32Array} This word array's data as a 32-bit word array.\n   *\n   * @example\n   *\n   *     var x32WordArray = x64WordArray.toX32();\n   */\n  public to32(){\n    const words32: number[] = [];\n    for(let i=0;i<this._words.length;i++){\n      const word64 = this._words[i];\n      words32.push(word64.high);\n      words32.push(word64.low);\n    }\n    return new Word32Array(words32, this._nSignificantBytes);\n  }\n  \n  /**\n   * Converts this word array to a string.\n   *\n   * @param {IEncoder?} encoder The encoding strategy to use. Default: CryptoJS.enc.Hex\n   * @return {string} The stringified word array.\n   * @example\n   *   var string = wordArray + '';\n   *   var string = wordArray.toString();\n   *   var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  public toString(encoder?: IEncoder){\n    if(!encoder){\n      return Hex.stringify(this.to32());\n    }\n    return encoder.stringify(this.to32());\n  }\n  \n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {Word64Array} The clone.\n   * @example\n   *   var clone = wordArray.clone();\n   */\n  public clone(){\n    const words = this._words.slice();\n    for(let i=0;i<words.length;i++){\n      words[i] = words[i].clone();\n    }\n    return new Word64Array(words, this._nSignificantBytes);\n  }\n}\n","import {Word32Array} from \"../Word32Array\";\nimport {Utf8} from \"../encoder/Utf8\";\n\nexport interface BufferedBlockAlgorithmProps {\n  data: Word32Array;\n  nBytes: number;\n}\n\nexport class BufferedBlockAlgorithm {\n  protected _props?: Partial<BufferedBlockAlgorithmProps>;\n  protected _data: Word32Array;\n  protected _nBytes: number;\n  protected _minBufferSize: number = 0;\n  protected _blockSize: number = 0;\n  \n  public constructor(props?: Partial<BufferedBlockAlgorithmProps>) {\n    this._props = props;\n    this._data = props && typeof props.data !== \"undefined\" ? props.data.clone() : new Word32Array();\n    this._nBytes = props && typeof props.nBytes === \"number\" ? props.nBytes : 0;\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *   bufferedBlockAlgorithm.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    this._data = typeof data !== \"undefined\" ? data.clone() : new Word32Array();\n    this._nBytes = typeof nBytes === \"number\" ? nBytes : 0;\n  }\n  \n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {Word32Array|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n   * @example\n   *   bufferedBlockAlgorithm.append('data');\n   *   bufferedBlockAlgorithm.append(wordArray);\n   */\n  protected _append(data: Word32Array|string){\n    const d = typeof data === \"string\" ? Utf8.parse(data) : data;\n    this._data.concat(d);\n    this._nBytes += d.nSigBytes;\n  }\n  \n  /**\n   * Processes available data blocks.\n   * This method invokes doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean?} doFlush Whether all blocks and partial blocks should be processed.\n   * @return {Word32Array} The processed data.\n   * @example\n   *   var processedData = bufferedBlockAlgorithm.process();\n   *   var processedData = bufferedBlockAlgorithm.process(!!'flush');\n   */\n  protected _process(doFlush?: boolean){\n    let processedWords: number[]|undefined;\n    const words = this._data.words;\n    const nSigBytes = this._data.nSigBytes;\n    const blockSize = this._blockSize;\n    const blockSizeByte = this._blockSize * 4;\n    \n    let nBlocksReady = nSigBytes / blockSizeByte;\n    if(doFlush){\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    }\n    else{\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    \n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n    \n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, nSigBytes);\n    \n    // Process blocks\n    if(nWordsReady){\n      for(let offset=0;offset<nWordsReady;offset+=blockSize){\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(words, offset);\n      }\n      \n      // Remove processed words\n      processedWords = words.splice(0, nWordsReady);\n      this._data.nSigBytes -= nBytesReady;\n    }\n    \n    // Return processed words\n    return new Word32Array(processedWords, nBytesReady);\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doProcessBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\")\n  }\n}\n","import {BufferedBlockAlgorithm, BufferedBlockAlgorithmProps} from \"./BufferedBlockAlgorithm\";\nimport type {Word32Array} from \"../Word32Array\";\n\nexport interface HasherProps extends BufferedBlockAlgorithmProps {\n  blockSize: number;\n}\n\nexport class Hasher extends BufferedBlockAlgorithm {\n  protected _props?: Partial<HasherProps>;\n  protected _blockSize: number = 512/32;\n  \n  public constructor(props?: Partial<HasherProps>){\n    super(props);\n    this._props = props;\n    if(props && typeof props.blockSize === \"number\"){\n      this._blockSize = props.blockSize;\n    }\n    this.reset(props ? props.data : undefined, props ? props.nBytes : undefined);\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *   hasher.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    // Reset data buffer\n    super.reset.call(this, data, nBytes);\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n  \n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {Word32Array|string} messageUpdate The message to append.\n   * @return {Hasher} This hasher.\n   * @example\n   *   hasher.update('message');\n   *   hasher.update(wordArray);\n   */\n  public update(messageUpdate: Word32Array|string){\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  \n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {Word32Array|string?} messageUpdate (Optional) A final message update.\n   * @return {Word32Array} The hash.\n   * @example\n   *   var hash = hasher.finalize();\n   *   var hash = hasher.finalize('message');\n   *   var hash = hasher.finalize(wordArray);\n   */\n  public finalize(messageUpdate?: Word32Array|string){\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  \n    // Perform concrete-hasher logic\n    return this._doFinalize();\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doReset(): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doFinalize(): Word32Array {\n    throw new Error(\"Not implemented\");\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Hex: IEncoder = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The hex string.\n   * @example\n   *   var hexString = Hex.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.nSigBytes;\n    const words = w.words;\n    const hexChars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((byte >>> 4).toString(16));\n      hexChars.push((byte & 0x0f).toString(16));\n    }\n    \n    return hexChars.join(\"\");\n  },\n  \n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Hex.parse(hexString);\n   */\n  parse(hexStr: string){\n    const Len = hexStr.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i+=2){\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n    \n    return new Word32Array(words, Len / 2);\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Latin1: IEncoder = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The Latin1 string.\n   * @example\n   *   var latin1String = Latin1.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.nSigBytes;\n    const words = w.words;\n    const latin1Chars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(byte));\n    }\n    \n    return latin1Chars.join(\"\");\n  },\n  \n  /**\n   * Converts a latin1 string to a word array.\n   *\n   * @param {string} latin1Str The latin1 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Latin1.parse(latin1Str);\n   */\n  parse(latin1Str: string){\n    const Len = latin1Str.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i++){\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n    \n    return new Word32Array(words, Len);\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Latin1} from \"./Latin1\";\nimport type {Word32Array} from \"../Word32Array\";\n\nexport const Utf8: IEncoder = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The UTF-8 string.\n   * @example\n   *   var utf8String = Utf8.stringify(new Word32Array([0x293892]));\n   */\n  stringify(w: Word32Array){\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(w)));\n    }\n    catch (e) {\n      throw new Error(\"Malformed UTF-8 data\");\n    }\n  },\n  \n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Utf8.parse(utf8Str);\n   */\n  parse(utf8Str: string){\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n}\n","interface WindowEx extends Window {\n  /**\n   * Native (experimental IE 11) crypto from window (Browser)\n   */\n  msCrypto?: Crypto;\n}\n\n/**\n * @ignore\n */\ndeclare let window: WindowEx;\ntype NodeCrypto = { randomBytes: (size: number) => { readInt32LE: () => number } };\n\nfunction makeRandFunction(): () => number {\n  if (typeof window !== \"undefined\") {\n    const c = window.crypto || window.msCrypto;\n    if (!c) {\n      throw new Error(\"Crypto module not found\");\n    }\n    return function rand(){\n      return (c as Crypto).getRandomValues(new Uint32Array(1))[0];\n    };\n  }\n  else if (typeof global !== \"undefined\" && global.crypto) {\n    return function rand(){\n      return ((global.crypto as unknown) as NodeCrypto).randomBytes(4).readInt32LE();\n    };\n  }\n  else if(typeof require === \"function\"){\n    return function rand(){\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return (__non_webpack_require__(\"crypto\") as NodeCrypto).randomBytes(4).readInt32LE();\n    }\n  }\n  throw new Error(\"Unable to find crypto module\");\n}\n\nexport const random = makeRandFunction();\n"],"sourceRoot":""}