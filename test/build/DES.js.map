{"version":3,"sources":["webpack://JsCrypto/webpack/universalModuleDefinition","webpack://JsCrypto/webpack/bootstrap","webpack://JsCrypto/(webpack)/buildin/global.js","webpack://JsCrypto/./src/DES.ts","webpack://JsCrypto/./src/MD5.ts","webpack://JsCrypto/./src/lib/Word32Array.ts","webpack://JsCrypto/./src/lib/algorithm/BufferedBlockAlgorithm.ts","webpack://JsCrypto/./src/lib/algorithm/Hasher.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/BlockCipher.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/Cipher.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/CipherParams.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/PasswordBasedCipher.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/SerializableCipher.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/formatter/OpenSSLFormatter.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/kdf/EvpKDF.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/kdf/OpenSSLKDF.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/mode/BlockCipherMode.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/mode/CBC.ts","webpack://JsCrypto/./src/lib/algorithm/cipher/pad/Pkcs7.ts","webpack://JsCrypto/./src/lib/encoder/Base64.ts","webpack://JsCrypto/./src/lib/encoder/Hex.ts","webpack://JsCrypto/./src/lib/encoder/Latin1.ts","webpack://JsCrypto/./src/lib/encoder/Utf8.ts","webpack://JsCrypto/./src/lib/random.ts"],"names":[],"mappings":"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,CAAC;QAEb,cAAc;QACd,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAA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","file":"DES.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsCrypto\"] = factory();\n\telse\n\t\troot[\"JsCrypto\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/DES.ts\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Permuted Choice 1 constants\nimport {BlockCipher, BlockCipherProps} from \"./lib/algorithm/cipher/BlockCipher\";\nimport {Cipher, CipherProps, PropsWithKey} from \"./lib/algorithm/cipher/Cipher\";\nimport {Word32Array} from \"./lib/Word32Array\";\nimport {PasswordBasedCipher} from \"./lib/algorithm/cipher/PasswordBasedCipher\";\nimport {SerializableCipher} from \"./lib/algorithm/cipher/SerializableCipher\";\nimport {CipherParams} from \"./lib/algorithm/cipher/CipherParams\";\n\nconst PC1 = [\n  57, 49, 41, 33, 25, 17, 9,  1,\n  58, 50, 42, 34, 26, 18, 10, 2,\n  59, 51, 43, 35, 27, 19, 11, 3,\n  60, 52, 44, 36, 63, 55, 47, 39,\n  31, 23, 15, 7,  62, 54, 46, 38,\n  30, 22, 14, 6,  61, 53, 45, 37,\n  29, 21, 13, 5,  28, 20, 12, 4\n];\n\n// Permuted Choice 2 constants\nconst PC2 = [\n  14, 17, 11, 24, 1,  5,\n  3,  28, 15, 6,  21, 10,\n  23, 19, 12, 4,  26, 8,\n  16, 7,  27, 20, 13, 2,\n  41, 52, 31, 37, 47, 55,\n  30, 40, 51, 45, 33, 48,\n  44, 49, 39, 56, 34, 53,\n  46, 42, 50, 36, 29, 32\n];\n\n// Cumulative bit shift constants\nconst BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n// SBOXes and round permutation constants\nconst SBOX_P: Array<{[key: number]: number}> = [\n  {\n    0x0: 0x808200,\n    0x10000000: 0x8000,\n    0x20000000: 0x808002,\n    0x30000000: 0x2,\n    0x40000000: 0x200,\n    0x50000000: 0x808202,\n    0x60000000: 0x800202,\n    0x70000000: 0x800000,\n    0x80000000: 0x202,\n    0x90000000: 0x800200,\n    0xa0000000: 0x8200,\n    0xb0000000: 0x808000,\n    0xc0000000: 0x8002,\n    0xd0000000: 0x800002,\n    0xe0000000: 0x0,\n    0xf0000000: 0x8202,\n    0x8000000: 0x0,\n    0x18000000: 0x808202,\n    0x28000000: 0x8202,\n    0x38000000: 0x8000,\n    0x48000000: 0x808200,\n    0x58000000: 0x200,\n    0x68000000: 0x808002,\n    0x78000000: 0x2,\n    0x88000000: 0x800200,\n    0x98000000: 0x8200,\n    0xa8000000: 0x808000,\n    0xb8000000: 0x800202,\n    0xc8000000: 0x800002,\n    0xd8000000: 0x8002,\n    0xe8000000: 0x202,\n    0xf8000000: 0x800000,\n    0x1: 0x8000,\n    0x10000001: 0x2,\n    0x20000001: 0x808200,\n    0x30000001: 0x800000,\n    0x40000001: 0x808002,\n    0x50000001: 0x8200,\n    0x60000001: 0x200,\n    0x70000001: 0x800202,\n    0x80000001: 0x808202,\n    0x90000001: 0x808000,\n    0xa0000001: 0x800002,\n    0xb0000001: 0x8202,\n    0xc0000001: 0x202,\n    0xd0000001: 0x800200,\n    0xe0000001: 0x8002,\n    0xf0000001: 0x0,\n    0x8000001: 0x808202,\n    0x18000001: 0x808000,\n    0x28000001: 0x800000,\n    0x38000001: 0x200,\n    0x48000001: 0x8000,\n    0x58000001: 0x800002,\n    0x68000001: 0x2,\n    0x78000001: 0x8202,\n    0x88000001: 0x8002,\n    0x98000001: 0x800202,\n    0xa8000001: 0x202,\n    0xb8000001: 0x808200,\n    0xc8000001: 0x800200,\n    0xd8000001: 0x0,\n    0xe8000001: 0x8200,\n    0xf8000001: 0x808002\n  },\n  {\n    0x0: 0x40084010,\n    0x1000000: 0x4000,\n    0x2000000: 0x80000,\n    0x3000000: 0x40080010,\n    0x4000000: 0x40000010,\n    0x5000000: 0x40084000,\n    0x6000000: 0x40004000,\n    0x7000000: 0x10,\n    0x8000000: 0x84000,\n    0x9000000: 0x40004010,\n    0xa000000: 0x40000000,\n    0xb000000: 0x84010,\n    0xc000000: 0x80010,\n    0xd000000: 0x0,\n    0xe000000: 0x4010,\n    0xf000000: 0x40080000,\n    0x800000: 0x40004000,\n    0x1800000: 0x84010,\n    0x2800000: 0x10,\n    0x3800000: 0x40004010,\n    0x4800000: 0x40084010,\n    0x5800000: 0x40000000,\n    0x6800000: 0x80000,\n    0x7800000: 0x40080010,\n    0x8800000: 0x80010,\n    0x9800000: 0x0,\n    0xa800000: 0x4000,\n    0xb800000: 0x40080000,\n    0xc800000: 0x40000010,\n    0xd800000: 0x84000,\n    0xe800000: 0x40084000,\n    0xf800000: 0x4010,\n    0x10000000: 0x0,\n    0x11000000: 0x40080010,\n    0x12000000: 0x40004010,\n    0x13000000: 0x40084000,\n    0x14000000: 0x40080000,\n    0x15000000: 0x10,\n    0x16000000: 0x84010,\n    0x17000000: 0x4000,\n    0x18000000: 0x4010,\n    0x19000000: 0x80000,\n    0x1a000000: 0x80010,\n    0x1b000000: 0x40000010,\n    0x1c000000: 0x84000,\n    0x1d000000: 0x40004000,\n    0x1e000000: 0x40000000,\n    0x1f000000: 0x40084010,\n    0x10800000: 0x84010,\n    0x11800000: 0x80000,\n    0x12800000: 0x40080000,\n    0x13800000: 0x4000,\n    0x14800000: 0x40004000,\n    0x15800000: 0x40084010,\n    0x16800000: 0x10,\n    0x17800000: 0x40000000,\n    0x18800000: 0x40084000,\n    0x19800000: 0x40000010,\n    0x1a800000: 0x40004010,\n    0x1b800000: 0x80010,\n    0x1c800000: 0x0,\n    0x1d800000: 0x4010,\n    0x1e800000: 0x40080010,\n    0x1f800000: 0x84000\n  },\n  {\n    0x0: 0x104,\n    0x100000: 0x0,\n    0x200000: 0x4000100,\n    0x300000: 0x10104,\n    0x400000: 0x10004,\n    0x500000: 0x4000004,\n    0x600000: 0x4010104,\n    0x700000: 0x4010000,\n    0x800000: 0x4000000,\n    0x900000: 0x4010100,\n    0xa00000: 0x10100,\n    0xb00000: 0x4010004,\n    0xc00000: 0x4000104,\n    0xd00000: 0x10000,\n    0xe00000: 0x4,\n    0xf00000: 0x100,\n    0x80000: 0x4010100,\n    0x180000: 0x4010004,\n    0x280000: 0x0,\n    0x380000: 0x4000100,\n    0x480000: 0x4000004,\n    0x580000: 0x10000,\n    0x680000: 0x10004,\n    0x780000: 0x104,\n    0x880000: 0x4,\n    0x980000: 0x100,\n    0xa80000: 0x4010000,\n    0xb80000: 0x10104,\n    0xc80000: 0x10100,\n    0xd80000: 0x4000104,\n    0xe80000: 0x4010104,\n    0xf80000: 0x4000000,\n    0x1000000: 0x4010100,\n    0x1100000: 0x10004,\n    0x1200000: 0x10000,\n    0x1300000: 0x4000100,\n    0x1400000: 0x100,\n    0x1500000: 0x4010104,\n    0x1600000: 0x4000004,\n    0x1700000: 0x0,\n    0x1800000: 0x4000104,\n    0x1900000: 0x4000000,\n    0x1a00000: 0x4,\n    0x1b00000: 0x10100,\n    0x1c00000: 0x4010000,\n    0x1d00000: 0x104,\n    0x1e00000: 0x10104,\n    0x1f00000: 0x4010004,\n    0x1080000: 0x4000000,\n    0x1180000: 0x104,\n    0x1280000: 0x4010100,\n    0x1380000: 0x0,\n    0x1480000: 0x10004,\n    0x1580000: 0x4000100,\n    0x1680000: 0x100,\n    0x1780000: 0x4010004,\n    0x1880000: 0x10000,\n    0x1980000: 0x4010104,\n    0x1a80000: 0x10104,\n    0x1b80000: 0x4000004,\n    0x1c80000: 0x4000104,\n    0x1d80000: 0x4010000,\n    0x1e80000: 0x4,\n    0x1f80000: 0x10100\n  },\n  {\n    0x0: 0x80401000,\n    0x10000: 0x80001040,\n    0x20000: 0x401040,\n    0x30000: 0x80400000,\n    0x40000: 0x0,\n    0x50000: 0x401000,\n    0x60000: 0x80000040,\n    0x70000: 0x400040,\n    0x80000: 0x80000000,\n    0x90000: 0x400000,\n    0xa0000: 0x40,\n    0xb0000: 0x80001000,\n    0xc0000: 0x80400040,\n    0xd0000: 0x1040,\n    0xe0000: 0x1000,\n    0xf0000: 0x80401040,\n    0x8000: 0x80001040,\n    0x18000: 0x40,\n    0x28000: 0x80400040,\n    0x38000: 0x80001000,\n    0x48000: 0x401000,\n    0x58000: 0x80401040,\n    0x68000: 0x0,\n    0x78000: 0x80400000,\n    0x88000: 0x1000,\n    0x98000: 0x80401000,\n    0xa8000: 0x400000,\n    0xb8000: 0x1040,\n    0xc8000: 0x80000000,\n    0xd8000: 0x400040,\n    0xe8000: 0x401040,\n    0xf8000: 0x80000040,\n    0x100000: 0x400040,\n    0x110000: 0x401000,\n    0x120000: 0x80000040,\n    0x130000: 0x0,\n    0x140000: 0x1040,\n    0x150000: 0x80400040,\n    0x160000: 0x80401000,\n    0x170000: 0x80001040,\n    0x180000: 0x80401040,\n    0x190000: 0x80000000,\n    0x1a0000: 0x80400000,\n    0x1b0000: 0x401040,\n    0x1c0000: 0x80001000,\n    0x1d0000: 0x400000,\n    0x1e0000: 0x40,\n    0x1f0000: 0x1000,\n    0x108000: 0x80400000,\n    0x118000: 0x80401040,\n    0x128000: 0x0,\n    0x138000: 0x401000,\n    0x148000: 0x400040,\n    0x158000: 0x80000000,\n    0x168000: 0x80001040,\n    0x178000: 0x40,\n    0x188000: 0x80000040,\n    0x198000: 0x1000,\n    0x1a8000: 0x80001000,\n    0x1b8000: 0x80400040,\n    0x1c8000: 0x1040,\n    0x1d8000: 0x80401000,\n    0x1e8000: 0x400000,\n    0x1f8000: 0x401040\n  },\n  {\n    0x0: 0x80,\n    0x1000: 0x1040000,\n    0x2000: 0x40000,\n    0x3000: 0x20000000,\n    0x4000: 0x20040080,\n    0x5000: 0x1000080,\n    0x6000: 0x21000080,\n    0x7000: 0x40080,\n    0x8000: 0x1000000,\n    0x9000: 0x20040000,\n    0xa000: 0x20000080,\n    0xb000: 0x21040080,\n    0xc000: 0x21040000,\n    0xd000: 0x0,\n    0xe000: 0x1040080,\n    0xf000: 0x21000000,\n    0x800: 0x1040080,\n    0x1800: 0x21000080,\n    0x2800: 0x80,\n    0x3800: 0x1040000,\n    0x4800: 0x40000,\n    0x5800: 0x20040080,\n    0x6800: 0x21040000,\n    0x7800: 0x20000000,\n    0x8800: 0x20040000,\n    0x9800: 0x0,\n    0xa800: 0x21040080,\n    0xb800: 0x1000080,\n    0xc800: 0x20000080,\n    0xd800: 0x21000000,\n    0xe800: 0x1000000,\n    0xf800: 0x40080,\n    0x10000: 0x40000,\n    0x11000: 0x80,\n    0x12000: 0x20000000,\n    0x13000: 0x21000080,\n    0x14000: 0x1000080,\n    0x15000: 0x21040000,\n    0x16000: 0x20040080,\n    0x17000: 0x1000000,\n    0x18000: 0x21040080,\n    0x19000: 0x21000000,\n    0x1a000: 0x1040000,\n    0x1b000: 0x20040000,\n    0x1c000: 0x40080,\n    0x1d000: 0x20000080,\n    0x1e000: 0x0,\n    0x1f000: 0x1040080,\n    0x10800: 0x21000080,\n    0x11800: 0x1000000,\n    0x12800: 0x1040000,\n    0x13800: 0x20040080,\n    0x14800: 0x20000000,\n    0x15800: 0x1040080,\n    0x16800: 0x80,\n    0x17800: 0x21040000,\n    0x18800: 0x40080,\n    0x19800: 0x21040080,\n    0x1a800: 0x0,\n    0x1b800: 0x21000000,\n    0x1c800: 0x1000080,\n    0x1d800: 0x40000,\n    0x1e800: 0x20040000,\n    0x1f800: 0x20000080\n  },\n  {\n    0x0: 0x10000008,\n    0x100: 0x2000,\n    0x200: 0x10200000,\n    0x300: 0x10202008,\n    0x400: 0x10002000,\n    0x500: 0x200000,\n    0x600: 0x200008,\n    0x700: 0x10000000,\n    0x800: 0x0,\n    0x900: 0x10002008,\n    0xa00: 0x202000,\n    0xb00: 0x8,\n    0xc00: 0x10200008,\n    0xd00: 0x202008,\n    0xe00: 0x2008,\n    0xf00: 0x10202000,\n    0x80: 0x10200000,\n    0x180: 0x10202008,\n    0x280: 0x8,\n    0x380: 0x200000,\n    0x480: 0x202008,\n    0x580: 0x10000008,\n    0x680: 0x10002000,\n    0x780: 0x2008,\n    0x880: 0x200008,\n    0x980: 0x2000,\n    0xa80: 0x10002008,\n    0xb80: 0x10200008,\n    0xc80: 0x0,\n    0xd80: 0x10202000,\n    0xe80: 0x202000,\n    0xf80: 0x10000000,\n    0x1000: 0x10002000,\n    0x1100: 0x10200008,\n    0x1200: 0x10202008,\n    0x1300: 0x2008,\n    0x1400: 0x200000,\n    0x1500: 0x10000000,\n    0x1600: 0x10000008,\n    0x1700: 0x202000,\n    0x1800: 0x202008,\n    0x1900: 0x0,\n    0x1a00: 0x8,\n    0x1b00: 0x10200000,\n    0x1c00: 0x2000,\n    0x1d00: 0x10002008,\n    0x1e00: 0x10202000,\n    0x1f00: 0x200008,\n    0x1080: 0x8,\n    0x1180: 0x202000,\n    0x1280: 0x200000,\n    0x1380: 0x10000008,\n    0x1480: 0x10002000,\n    0x1580: 0x2008,\n    0x1680: 0x10202008,\n    0x1780: 0x10200000,\n    0x1880: 0x10202000,\n    0x1980: 0x10200008,\n    0x1a80: 0x2000,\n    0x1b80: 0x202008,\n    0x1c80: 0x200008,\n    0x1d80: 0x0,\n    0x1e80: 0x10000000,\n    0x1f80: 0x10002008\n  },\n  {\n    0x0: 0x100000,\n    0x10: 0x2000401,\n    0x20: 0x400,\n    0x30: 0x100401,\n    0x40: 0x2100401,\n    0x50: 0x0,\n    0x60: 0x1,\n    0x70: 0x2100001,\n    0x80: 0x2000400,\n    0x90: 0x100001,\n    0xa0: 0x2000001,\n    0xb0: 0x2100400,\n    0xc0: 0x2100000,\n    0xd0: 0x401,\n    0xe0: 0x100400,\n    0xf0: 0x2000000,\n    0x8: 0x2100001,\n    0x18: 0x0,\n    0x28: 0x2000401,\n    0x38: 0x2100400,\n    0x48: 0x100000,\n    0x58: 0x2000001,\n    0x68: 0x2000000,\n    0x78: 0x401,\n    0x88: 0x100401,\n    0x98: 0x2000400,\n    0xa8: 0x2100000,\n    0xb8: 0x100001,\n    0xc8: 0x400,\n    0xd8: 0x2100401,\n    0xe8: 0x1,\n    0xf8: 0x100400,\n    0x100: 0x2000000,\n    0x110: 0x100000,\n    0x120: 0x2000401,\n    0x130: 0x2100001,\n    0x140: 0x100001,\n    0x150: 0x2000400,\n    0x160: 0x2100400,\n    0x170: 0x100401,\n    0x180: 0x401,\n    0x190: 0x2100401,\n    0x1a0: 0x100400,\n    0x1b0: 0x1,\n    0x1c0: 0x0,\n    0x1d0: 0x2100000,\n    0x1e0: 0x2000001,\n    0x1f0: 0x400,\n    0x108: 0x100400,\n    0x118: 0x2000401,\n    0x128: 0x2100001,\n    0x138: 0x1,\n    0x148: 0x2000000,\n    0x158: 0x100000,\n    0x168: 0x401,\n    0x178: 0x2100400,\n    0x188: 0x2000001,\n    0x198: 0x2100000,\n    0x1a8: 0x0,\n    0x1b8: 0x2100401,\n    0x1c8: 0x100401,\n    0x1d8: 0x400,\n    0x1e8: 0x2000400,\n    0x1f8: 0x100001\n  },\n  {\n    0x0: 0x8000820,\n    0x1: 0x20000,\n    0x2: 0x8000000,\n    0x3: 0x20,\n    0x4: 0x20020,\n    0x5: 0x8020820,\n    0x6: 0x8020800,\n    0x7: 0x800,\n    0x8: 0x8020000,\n    0x9: 0x8000800,\n    0xa: 0x20800,\n    0xb: 0x8020020,\n    0xc: 0x820,\n    0xd: 0x0,\n    0xe: 0x8000020,\n    0xf: 0x20820,\n    0x80000000: 0x800,\n    0x80000001: 0x8020820,\n    0x80000002: 0x8000820,\n    0x80000003: 0x8000000,\n    0x80000004: 0x8020000,\n    0x80000005: 0x20800,\n    0x80000006: 0x20820,\n    0x80000007: 0x20,\n    0x80000008: 0x8000020,\n    0x80000009: 0x820,\n    0x8000000a: 0x20020,\n    0x8000000b: 0x8020800,\n    0x8000000c: 0x0,\n    0x8000000d: 0x8020020,\n    0x8000000e: 0x8000800,\n    0x8000000f: 0x20000,\n    0x10: 0x20820,\n    0x11: 0x8020800,\n    0x12: 0x20,\n    0x13: 0x800,\n    0x14: 0x8000800,\n    0x15: 0x8000020,\n    0x16: 0x8020020,\n    0x17: 0x20000,\n    0x18: 0x0,\n    0x19: 0x20020,\n    0x1a: 0x8020000,\n    0x1b: 0x8000820,\n    0x1c: 0x8020820,\n    0x1d: 0x20800,\n    0x1e: 0x820,\n    0x1f: 0x8000000,\n    0x80000010: 0x20000,\n    0x80000011: 0x800,\n    0x80000012: 0x8020020,\n    0x80000013: 0x20820,\n    0x80000014: 0x20,\n    0x80000015: 0x8020000,\n    0x80000016: 0x8000000,\n    0x80000017: 0x8000820,\n    0x80000018: 0x8020820,\n    0x80000019: 0x8000020,\n    0x8000001a: 0x8000800,\n    0x8000001b: 0x0,\n    0x8000001c: 0x20800,\n    0x8000001d: 0x820,\n    0x8000001e: 0x20020,\n    0x8000001f: 0x8020800\n  }\n];\n\n// Masks that select the SBOX input\nconst SBOX_MASK = [\n  0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n  0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n];\n\nexport interface DESProps extends BlockCipherProps {}\n\nexport class DES extends BlockCipher {\n  public static readonly keySize = 64/32;\n  public static readonly ivSize = 64/32;\n  protected static readonly _blockSize = 64/32;\n  \n  public _props: PropsWithKey<DESProps>;\n  protected _subKeys: number[][] = [];\n  protected _invSubKeys: number[][] = [];\n  protected _lBlock: number = 0;\n  protected _rBlock: number = 0;\n  \n  public constructor(props: PropsWithKey<DESProps>) {\n    super(props);\n    this._props = props;\n    \n    this._doReset();\n  }\n  \n  protected _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n  \n    // Select 56 bits according to PC1\n    const keyBits = [];\n    for(let i=0;i<56;i++){\n      const keyBitPos = PC1[i] - 1;\n      keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n    }\n  \n    // Assemble 16 subkeys\n    const subKeys: number[][] = this._subKeys = [];\n    for(let nSubKey=0;nSubKey<16;nSubKey++){\n      // Create subkey\n      const subKey: number[] = subKeys[nSubKey] = [];\n    \n      // Shortcut\n      const bitShift = BIT_SHIFTS[nSubKey];\n    \n      // Select 48 bits according to PC2\n      for (let i = 0; i < 24; i++) {\n        // Select from the left 28 key bits\n        subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n      \n        // Select from the right 28 key bits\n        subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n      }\n    \n      // Since each subkey is applied to an expanded 32-bit input,\n      // the subkey can be broken into 8 values scaled to 32-bits,\n      // which allows the key to be used without expansion\n      subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n      for(let i=1;i<7;i++){\n        subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n      }\n      subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n    }\n  \n    // Compute inverse subkeys\n    this._invSubKeys = [];\n    for (let i = 0; i < 16; i++) {\n      this._invSubKeys[i] = subKeys[15 - i];\n    }\n  }\n  \n  public encryptBlock(words: number[], offset: number){\n    this._doCryptoBlock(words, offset, this._subKeys);\n  }\n  \n  public decryptBlock(words: number[], offset: number) {\n    this._doCryptoBlock(words, offset, this._invSubKeys);\n  }\n  \n  protected _doCryptoBlock(words: number[], offset: number, subKeys: number[][]){\n    // Get input\n    this._lBlock = words[offset];\n    this._rBlock = words[offset + 1];\n  \n    // Initial permutation\n    this._exchangeLR(4,  0x0f0f0f0f);\n    this._exchangeLR(16, 0x0000ffff);\n    this._exchangeRL(2,  0x33333333);\n    this._exchangeRL(8,  0x00ff00ff);\n    this._exchangeLR(1,  0x55555555);\n  \n    // Rounds\n    for(let round=0;round<16;round++){\n      // Shortcuts\n      const subKey = subKeys[round];\n      const lBlock = this._lBlock;\n      const rBlock = this._rBlock;\n    \n      // Feistel function\n      let f = 0;\n      for(let i=0;i<8;i++) {\n        const s = ((rBlock ^ subKey[i]) & SBOX_MASK[i]);\n        f |= SBOX_P[i][s >>> 0];\n      }\n      this._lBlock = rBlock;\n      this._rBlock = lBlock ^ f;\n    }\n  \n    // Undo swap from last round\n    const t = this._lBlock;\n    this._lBlock = this._rBlock;\n    this._rBlock = t;\n  \n    // Final permutation\n    this._exchangeLR(1,  0x55555555);\n    this._exchangeRL(8,  0x00ff00ff);\n    this._exchangeRL(2,  0x33333333);\n    this._exchangeLR(16, 0x0000ffff);\n    this._exchangeLR(4,  0x0f0f0f0f);\n  \n    // Set output\n    words[offset] = this._lBlock;\n    words[offset + 1] = this._rBlock;\n  }\n  \n  protected _exchangeLR(offset: number, mask: number){\n    const t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n    this._rBlock ^= t;\n    this._lBlock ^= t << offset;\n  }\n  \n  protected _exchangeRL(offset: number, mask: number){\n    const t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n    this._lBlock ^= t;\n    this._rBlock ^= t << offset;\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = JsCrypto.DES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES({...props, key, transformMode: Cipher.ENC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = JsCrypto.DES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES({...props, key, transformMode: Cipher.DEC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Encrypt a message with key\n   *\n   * @param {Word32Array|string} message\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = JsCrypt.DES.encrypt(\"test\", \"pass\");\n   */\n  public static encrypt(message: Word32Array|string, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.encrypt(DES, message, key, props);\n    }\n    return SerializableCipher.encrypt(DES, message, key, props);\n  }\n  \n  /**\n   * Encrypt a encrypted message with key\n   *\n   * @param {CipherParams} cipherText\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = JsCrypt.DES.decrypt(cipherProps, \"pass\");\n   */\n  public static decrypt(cipherText: CipherParams, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.decrypt(DES, cipherText, key, props);\n    }\n    return SerializableCipher.decrypt(DES, cipherText, key, props);\n  }\n}\n\nexport interface DES3Props extends BlockCipherProps {}\n\nexport class DES3 extends BlockCipher {\n  public static readonly keySize = 192/32;\n  public static readonly ivSize = 64/32;\n  protected static readonly _blockSize = 64/32;\n  protected _des1: DES;\n  protected _des2: DES;\n  protected _des3: DES;\n  \n  public constructor(props: PropsWithKey<DESProps>) {\n    super(props);\n    this._props = props;\n  \n    const TripleDES = this._get3DES();\n    \n    // Create DES instances\n    this._des1 = TripleDES[0];\n    this._des2 = TripleDES[1];\n    this._des3 = TripleDES[2];\n  }\n  \n  protected _get3DES(){\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n    // Make sure the key length is valid (64, 128 or >= 192 bit)\n    if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n      throw new Error(\"Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.\");\n    }\n  \n    // Extend the key according to the keying options defined in 3DES standard\n    const key1 = keyWords.slice(0, 2);\n    const key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n    const key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n  \n    // Create DES instances\n    const des1 = DES.createEncryptor(new Word32Array(key1));\n    const des2 = DES.createEncryptor(new Word32Array(key2));\n    const des3 = DES.createEncryptor(new Word32Array(key3));\n    return [des1, des2, des3];\n  }\n  \n  protected _doReset() {\n    const TripleDES = this._get3DES();\n    // Create DES instances\n    this._des1 = TripleDES[0];\n    this._des2 = TripleDES[1];\n    this._des3 = TripleDES[2];\n  }\n  \n  public encryptBlock(words: number[], offset: number) {\n    this._des1.encryptBlock(words, offset);\n    this._des2.decryptBlock(words, offset);\n    this._des3.encryptBlock(words, offset);\n  }\n  \n  public decryptBlock(words: number[], offset: number) {\n    this._des3.decryptBlock(words, offset);\n    this._des2.encryptBlock(words, offset);\n    this._des1.decryptBlock(words, offset);\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = JsCrypto.DES3.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES3({...props, key, transformMode: Cipher.ENC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = JsCrypto.DES3.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new DES3({...props, key, transformMode: Cipher.DEC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Encrypt a message with key\n   *\n   * @param {Word32Array|string} message\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = JsCrypt.DES3.encrypt(\"test\", \"pass\");\n   */\n  public static encrypt(message: Word32Array|string, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.encrypt(DES3, message, key, props);\n    }\n    return SerializableCipher.encrypt(DES3, message, key, props);\n  }\n  \n  /**\n   * Encrypt a encrypted message with key\n   *\n   * @param {CipherParams} cipherText\n   * @param {Word32Array|string} key\n   * @param {Partial<AESProps>?} props\n   * @example\n   *   var encryptedMessage = JsCrypt.DES3.decrypt(cipherProps, \"pass\");\n   */\n  public static decrypt(cipherText: CipherParams, key: Word32Array|string, props?: Partial<DESProps>){\n    if(typeof key === \"string\"){\n      return PasswordBasedCipher.decrypt(DES3, cipherText, key, props);\n    }\n    return SerializableCipher.decrypt(DES3, cipherText, key, props);\n  }\n}\n","import {Word32Array} from \"./lib/Word32Array\";\nimport {Hasher, HasherProps} from \"./lib/algorithm/Hasher\";\n\nexport interface MD5Props extends HasherProps {\n  hash: Word32Array;\n}\n\n// Constants table\nconst T: number[] = [];\n\n(function computeConstant(){\n  for(let i=0;i<64;i++){\n    T[i] = (Math.abs(Math.sin(i+1)) * 0x100000000) | 0;\n  }\n})();\n\nfunction FF(a: number, b: number, c: number, d: number, x: number, s: number, t: number){\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n}\n\nfunction GG(a: number, b: number, c: number, d: number, x: number, s: number, t: number){\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n}\n\nfunction HH(a: number, b: number, c: number, d: number, x: number, s: number, t: number){\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n}\n\nfunction II(a: number, b: number, c: number, d: number, x: number, s: number, t: number){\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n}\n\n/**\n * MD5 hash algorithm\n */\nexport class MD5 extends Hasher {\n  private _hash: Word32Array = new Word32Array([\n    0x67452301, 0xefcdab89,\n    0x98badcfe, 0x10325476\n  ]);\n  \n  public constructor(props?: MD5Props) {\n    super(props);\n    if(props && typeof props.hash !== \"undefined\"){\n      this._hash = props.hash.clone();\n    }\n  }\n  \n  protected _doReset() {\n    this._hash = new Word32Array([\n      0x67452301, 0xefcdab89,\n      0x98badcfe, 0x10325476\n    ]);\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    // Swap endian\n    for (let i=0;i<16;i++) {\n      // Shortcuts\n      const offsetI = offset + i;\n      const wordsOffsetI = words[offsetI];\n    \n      words[offsetI] = (\n        (((wordsOffsetI << 8)  | (wordsOffsetI >>> 24)) & 0x00ff00ff)\n        | (((wordsOffsetI << 24) | (wordsOffsetI >>> 8))  & 0xff00ff00)\n      );\n    }\n  \n    // Shortcuts\n    const H = this._hash.words;\n  \n    const wordOffset0  = words[offset];\n    const wordOffset1  = words[offset + 1];\n    const wordOffset2  = words[offset + 2];\n    const wordOffset3  = words[offset + 3];\n    const wordOffset4  = words[offset + 4];\n    const wordOffset5  = words[offset + 5];\n    const wordOffset6  = words[offset + 6];\n    const wordOffset7  = words[offset + 7];\n    const wordOffset8  = words[offset + 8];\n    const wordOffset9  = words[offset + 9];\n    const wordOffset10 = words[offset + 10];\n    const wordOffset11 = words[offset + 11];\n    const wordOffset12 = words[offset + 12];\n    const wordOffset13 = words[offset + 13];\n    const wordOffset14 = words[offset + 14];\n    const wordOffset15 = words[offset + 15];\n  \n    // Working variables\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n  \n    // Computation\n    a = FF(a, b, c, d, wordOffset0,  7,  T[0]);\n    d = FF(d, a, b, c, wordOffset1,  12, T[1]);\n    c = FF(c, d, a, b, wordOffset2,  17, T[2]);\n    b = FF(b, c, d, a, wordOffset3,  22, T[3]);\n    a = FF(a, b, c, d, wordOffset4,  7,  T[4]);\n    d = FF(d, a, b, c, wordOffset5,  12, T[5]);\n    c = FF(c, d, a, b, wordOffset6,  17, T[6]);\n    b = FF(b, c, d, a, wordOffset7,  22, T[7]);\n    a = FF(a, b, c, d, wordOffset8,  7,  T[8]);\n    d = FF(d, a, b, c, wordOffset9,  12, T[9]);\n    c = FF(c, d, a, b, wordOffset10, 17, T[10]);\n    b = FF(b, c, d, a, wordOffset11, 22, T[11]);\n    a = FF(a, b, c, d, wordOffset12, 7,  T[12]);\n    d = FF(d, a, b, c, wordOffset13, 12, T[13]);\n    c = FF(c, d, a, b, wordOffset14, 17, T[14]);\n    b = FF(b, c, d, a, wordOffset15, 22, T[15]);\n  \n    a = GG(a, b, c, d, wordOffset1,  5,  T[16]);\n    d = GG(d, a, b, c, wordOffset6,  9,  T[17]);\n    c = GG(c, d, a, b, wordOffset11, 14, T[18]);\n    b = GG(b, c, d, a, wordOffset0,  20, T[19]);\n    a = GG(a, b, c, d, wordOffset5,  5,  T[20]);\n    d = GG(d, a, b, c, wordOffset10, 9,  T[21]);\n    c = GG(c, d, a, b, wordOffset15, 14, T[22]);\n    b = GG(b, c, d, a, wordOffset4,  20, T[23]);\n    a = GG(a, b, c, d, wordOffset9,  5,  T[24]);\n    d = GG(d, a, b, c, wordOffset14, 9,  T[25]);\n    c = GG(c, d, a, b, wordOffset3,  14, T[26]);\n    b = GG(b, c, d, a, wordOffset8,  20, T[27]);\n    a = GG(a, b, c, d, wordOffset13, 5,  T[28]);\n    d = GG(d, a, b, c, wordOffset2,  9,  T[29]);\n    c = GG(c, d, a, b, wordOffset7,  14, T[30]);\n    b = GG(b, c, d, a, wordOffset12, 20, T[31]);\n  \n    a = HH(a, b, c, d, wordOffset5,  4,  T[32]);\n    d = HH(d, a, b, c, wordOffset8,  11, T[33]);\n    c = HH(c, d, a, b, wordOffset11, 16, T[34]);\n    b = HH(b, c, d, a, wordOffset14, 23, T[35]);\n    a = HH(a, b, c, d, wordOffset1,  4,  T[36]);\n    d = HH(d, a, b, c, wordOffset4,  11, T[37]);\n    c = HH(c, d, a, b, wordOffset7,  16, T[38]);\n    b = HH(b, c, d, a, wordOffset10, 23, T[39]);\n    a = HH(a, b, c, d, wordOffset13, 4,  T[40]);\n    d = HH(d, a, b, c, wordOffset0,  11, T[41]);\n    c = HH(c, d, a, b, wordOffset3,  16, T[42]);\n    b = HH(b, c, d, a, wordOffset6,  23, T[43]);\n    a = HH(a, b, c, d, wordOffset9,  4,  T[44]);\n    d = HH(d, a, b, c, wordOffset12, 11, T[45]);\n    c = HH(c, d, a, b, wordOffset15, 16, T[46]);\n    b = HH(b, c, d, a, wordOffset2,  23, T[47]);\n  \n    a = II(a, b, c, d, wordOffset0,  6,  T[48]);\n    d = II(d, a, b, c, wordOffset7,  10, T[49]);\n    c = II(c, d, a, b, wordOffset14, 15, T[50]);\n    b = II(b, c, d, a, wordOffset5,  21, T[51]);\n    a = II(a, b, c, d, wordOffset12, 6,  T[52]);\n    d = II(d, a, b, c, wordOffset3,  10, T[53]);\n    c = II(c, d, a, b, wordOffset10, 15, T[54]);\n    b = II(b, c, d, a, wordOffset1,  21, T[55]);\n    a = II(a, b, c, d, wordOffset8,  6,  T[56]);\n    d = II(d, a, b, c, wordOffset15, 10, T[57]);\n    c = II(c, d, a, b, wordOffset6,  15, T[58]);\n    b = II(b, c, d, a, wordOffset13, 21, T[59]);\n    a = II(a, b, c, d, wordOffset4,  6,  T[60]);\n    d = II(d, a, b, c, wordOffset11, 10, T[61]);\n    c = II(c, d, a, b, wordOffset2,  15, T[62]);\n    b = II(b, c, d, a, wordOffset9,  21, T[63]);\n  \n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  \n  protected _doFinalize(): Word32Array {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n  \n    const nBitsTotal = this._nBytes * 8;\n    const nBitsLeft = data.nSigBytes * 8;\n  \n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n  \n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n      (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n      (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n    );\n  \n    data.nSigBytes = (dataWords.length + 1) * 4;\n  \n    // Hash final blocks\n    this._process();\n  \n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n  \n    // Swap endian\n    for (let i=0;i<4;i++) {\n      // Shortcut\n      const Hi = H[i];\n      H[i] = (((Hi << 8)  | (Hi >>> 24)) & 0x00ff00ff)\n        | (((Hi << 24) | (Hi >>> 8))  & 0xff00ff00);\n    }\n  \n    // Return final computed hash\n    return hash;\n  }\n  \n  public clone(){\n    const props = {hash: this._hash, blockSize: this._blockSize, data: this._data, nBytes: this._nBytes};\n    return new MD5(props);\n  }\n  \n  public static hash(message: Word32Array|string){\n    return new MD5().finalize(message);\n  }\n}\n","import type {IEncoder} from \"./type\";\nimport {Hex} from \"./encoder/Hex\";\nimport {random} from \"./random\";\n\n/**\n * An array of 32bit words\n */\nexport class Word32Array {\n  private readonly _words: number[];\n  private _nSignificantBytes: number;\n  \n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} nSignificantBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *   var wordArray = new WordArray();\n   *   var wordArray = new WordArray([0x00010203, 0x04050607]);\n   *   var wordArray = new WordArray([0x00010203, 0x04050607], 6);\n   */\n  public constructor(words?: number[], nSignificantBytes?: number) {\n    this._words = words || [];\n    this._nSignificantBytes = typeof nSignificantBytes === \"number\" ? nSignificantBytes : this._words.length * 4;\n  }\n  \n  public get nSigBytes(){\n    return this._nSignificantBytes;\n  }\n  \n  /**\n   * Set significant bytes\n   * @param {number} n - significant bytes\n   */\n  public set nSigBytes(n: number){\n    this._nSignificantBytes = n;\n  }\n  \n  /**\n   * Get raw reference of internal words.\n   * Modification of this raw array will affect internal words.\n   */\n  public get words(){\n    return this._words;\n  }\n  \n  /**\n   * Converts this word array to a string.\n   *\n   * @param {IEncoder?} encoder The encoding strategy to use. Default: CryptoJS.enc.Hex\n   * @return {string} The stringified word array.\n   * @example\n   *   var string = wordArray + '';\n   *   var string = wordArray.toString();\n   *   var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  public toString(encoder?: IEncoder){\n    if(!encoder){\n      return Hex.stringify(this);\n    }\n    return encoder.stringify(this);\n  }\n  \n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {Word32Array} w The word array to append.\n   * @return {Word32Array} This word array.\n   * @example\n   *   wordArray1.concat(wordArray2);\n   */\n  public concat(w: Word32Array){\n    const words = w.words.slice();\n    const N = w.nSigBytes;\n    \n    this.clamp();\n  \n    if(this._nSignificantBytes % 4){\n      // Copy one byte at a time\n      for(let i=0;i<N;i++){\n        const b = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        this._words[(this._nSignificantBytes + i) >>> 2] |= b << (24 - ((this._nSignificantBytes + i) % 4) * 8);\n      }\n    }\n    else {\n      // Copy one word at a time\n      for(let i=0;i<N;i+=4) {\n        this._words[(this._nSignificantBytes + i) >>> 2] = words[i >>> 2];\n      }\n    }\n    \n    this._nSignificantBytes += N;\n  \n    // Chainable\n    return this;\n  }\n  \n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *   wordArray.clamp();\n   */\n  public clamp(){\n    const n = this._nSignificantBytes;\n    this._words[n >>> 2] &= 0xffffffff << (32 - (n % 4) * 8);\n    this._words.length = Math.ceil(n / 4);\n  }\n  \n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {Word32Array} The clone.\n   * @example\n   *   var clone = wordArray.clone();\n   */\n  public clone(){\n    return new Word32Array(this._words.slice(), this._nSignificantBytes);\n  }\n  \n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   * @return {Word32Array} The random word array.\n   * @static\n   * @example\n   *   var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  public static random(nBytes: number){\n    const words: number[] = [];\n    \n    for(let i=0;i<nBytes;i++){\n      words.push(random());\n    }\n    \n    return new Word32Array(words, nBytes);\n  }\n}\n","import {Word32Array} from \"../Word32Array\";\nimport {Utf8} from \"../encoder/Utf8\";\n\nexport interface BufferedBlockAlgorithmProps {\n  data: Word32Array;\n  nBytes: number;\n}\n\nexport class BufferedBlockAlgorithm {\n  protected _props?: Partial<BufferedBlockAlgorithmProps>;\n  protected _data: Word32Array;\n  protected _nBytes: number;\n  protected _minBufferSize: number = 0;\n  protected _blockSize: number = 0;\n  \n  public constructor(props?: Partial<BufferedBlockAlgorithmProps>) {\n    this._props = props;\n    this._data = props && typeof props.data !== \"undefined\" ? props.data.clone() : new Word32Array();\n    this._nBytes = props && typeof props.nBytes === \"number\" ? props.nBytes : 0;\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *   bufferedBlockAlgorithm.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    this._data = typeof data !== \"undefined\" ? data.clone() : new Word32Array();\n    this._nBytes = typeof nBytes === \"number\" ? nBytes : 0;\n  }\n  \n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {Word32Array|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n   * @example\n   *   bufferedBlockAlgorithm.append('data');\n   *   bufferedBlockAlgorithm.append(wordArray);\n   */\n  protected _append(data: Word32Array|string){\n    const d = typeof data === \"string\" ? Utf8.parse(data) : data;\n    this._data.concat(d);\n    this._nBytes += d.nSigBytes;\n  }\n  \n  /**\n   * Processes available data blocks.\n   * This method invokes doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean?} doFlush Whether all blocks and partial blocks should be processed.\n   * @return {Word32Array} The processed data.\n   * @example\n   *   var processedData = bufferedBlockAlgorithm.process();\n   *   var processedData = bufferedBlockAlgorithm.process(!!'flush');\n   */\n  protected _process(doFlush?: boolean){\n    let processedWords: number[]|undefined;\n    const words = this._data.words;\n    const nSigBytes = this._data.nSigBytes;\n    const blockSize = this._blockSize;\n    const blockSizeByte = this._blockSize * 4;\n    \n    let nBlocksReady = nSigBytes / blockSizeByte;\n    if(doFlush){\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    }\n    else{\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    \n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n    \n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, nSigBytes);\n    \n    // Process blocks\n    if(nWordsReady){\n      for(let offset=0;offset<nWordsReady;offset+=blockSize){\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(words, offset);\n      }\n      \n      // Remove processed words\n      processedWords = words.splice(0, nWordsReady);\n      this._data.nSigBytes -= nBytesReady;\n    }\n    \n    // Return processed words\n    return new Word32Array(processedWords, nBytesReady);\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doProcessBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\")\n  }\n}\n","import {BufferedBlockAlgorithm, BufferedBlockAlgorithmProps} from \"./BufferedBlockAlgorithm\";\nimport type {Word32Array} from \"../Word32Array\";\n\nexport interface HasherProps extends BufferedBlockAlgorithmProps {\n  blockSize: number;\n}\n\nexport class Hasher extends BufferedBlockAlgorithm {\n  protected _props?: Partial<HasherProps>;\n  protected _blockSize: number = 512/32;\n  \n  public constructor(props?: Partial<HasherProps>){\n    super(props);\n    this._props = props;\n    if(props && typeof props.blockSize === \"number\"){\n      this._blockSize = props.blockSize;\n    }\n    this.reset(props ? props.data : undefined, props ? props.nBytes : undefined);\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *   hasher.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    // Reset data buffer\n    super.reset.call(this, data, nBytes);\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n  \n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {Word32Array|string} messageUpdate The message to append.\n   * @return {Hasher} This hasher.\n   * @example\n   *   hasher.update('message');\n   *   hasher.update(wordArray);\n   */\n  public update(messageUpdate: Word32Array|string){\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  \n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {Word32Array|string?} messageUpdate (Optional) A final message update.\n   * @return {Word32Array} The hash.\n   * @example\n   *   var hash = hasher.finalize();\n   *   var hash = hasher.finalize('message');\n   *   var hash = hasher.finalize(wordArray);\n   */\n  public finalize(messageUpdate?: Word32Array|string){\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  \n    // Perform concrete-hasher logic\n    return this._doFinalize();\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doReset(): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doFinalize(): Word32Array {\n    throw new Error(\"Not implemented\");\n  }\n}\n","import {Cipher, CipherProps, PropsWithKey} from \"./Cipher\";\nimport type {BlockCipherMode, BlockCipherModeProps} from \"./mode/BlockCipherMode\";\nimport type {Pad} from \"./pad/type\";\nimport {CBC} from \"./mode/CBC\";\nimport {Pkcs7} from \"./pad/Pkcs7\";\nimport type {Word32Array} from \"../../Word32Array\";\n\nexport interface BlockCipherProps extends CipherProps {\n  mode: typeof BlockCipherMode;\n  padding: Pad;\n}\n\nexport class BlockCipher extends Cipher {\n  protected _props: PropsWithKey<BlockCipherProps>;\n  protected _blockSize = 128/32;\n  protected _Mode: typeof BlockCipherMode = CBC;\n  protected _mode?: BlockCipherMode;\n  protected _padding: Pad = Pkcs7;\n  protected _modeCreator?: (props: BlockCipherModeProps) => BlockCipherMode;\n  \n  /**\n   * @see https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   */\n  [\"constructor\"]!: typeof BlockCipher;\n  \n  public constructor(props: PropsWithKey<BlockCipherProps>) {\n    super(props);\n    this._props = props;\n  \n    this._Mode = typeof props.mode !== \"undefined\" ? props.mode : this._Mode;\n    this._padding = typeof props.padding !== \"undefined\" ? props.padding : this._padding;\n  \n    this.reset(props?.data, props?.nBytes);\n  }\n  \n  public get iv(){\n    return this._iv;\n  }\n  \n  public get mode(){\n    return this._mode;\n  }\n  \n  public get padding(){\n    return this._padding;\n  }\n  \n  reset(data?: Word32Array, nBytes?: number) {\n    super.reset(data, nBytes);\n    \n    let modeCreator: (props: BlockCipherModeProps) => BlockCipherMode;\n    if(this._transformMode === Cipher.ENC_TRANSFORM_MODE){\n      modeCreator = this._Mode.createEncryptor;\n    }\n    else{\n      modeCreator = this._Mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n    \n    if(this._Mode && this._modeCreator=== modeCreator){\n      this._mode = new this._Mode({cipher: this, iv: this._iv && this._iv.words});\n    }\n    else{\n      this._mode = modeCreator.call(this._Mode, {cipher: this, iv: this._iv && this._iv.words});\n      this._modeCreator = modeCreator;\n    }\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    this._mode?.processBlock(words, offset);\n  }\n  \n  protected _doFinalize(): Word32Array {\n    let finalProcessedBlocks: Word32Array;\n  \n    // Shortcut\n    const padding = this._padding;\n  \n    // Finalize\n    if (this._transformMode === Cipher.ENC_TRANSFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n    \n      // Process final blocks\n      finalProcessedBlocks = this._process(true);\n    }\n    else /* if (this._transformMode == Cipher._DEC_TRANSFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(true);\n    \n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n  \n    return finalProcessedBlocks;\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *     var cipher = JsCrypto.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<BlockCipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new BlockCipher({...props, key, transformMode: Cipher.ENC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = JsCrypto.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<BlockCipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new BlockCipher({...props, key, transformMode: Cipher.DEC_TRANSFORM_MODE});\n  }\n}\n","import {BufferedBlockAlgorithm, BufferedBlockAlgorithmProps} from \"../BufferedBlockAlgorithm\";\nimport type {Word32Array} from \"../../Word32Array\";\n\nexport interface CipherProps extends BufferedBlockAlgorithmProps {\n  key: Word32Array;\n  iv: Word32Array;\n  transformMode: number;\n}\n\nexport type PropsWithKey<T extends CipherProps> = Partial<T> & Pick<T, \"key\">;\n\nexport class Cipher extends BufferedBlockAlgorithm {\n  public static readonly ENC_TRANSFORM_MODE = 1;\n  public static readonly DEC_TRANSFORM_MODE = 2;\n  public static readonly keySize = 128/32;\n  public static readonly ivSize = 128/32;\n  \n  protected _props: PropsWithKey<CipherProps>;\n  protected _transformMode: number = 1;\n  protected _key: Word32Array;\n  protected _iv?: Word32Array;\n  \n  public constructor(props: PropsWithKey<CipherProps>) {\n    super(props);\n    this._props = props;\n  \n    this._key = props.key;\n    this._iv = typeof props.iv !== \"undefined\" ? props.iv : this._iv;\n    this._transformMode = typeof props.transformMode !== \"undefined\" ? props.transformMode : this._transformMode;\n  }\n  \n  /**\n   * Resets this cipher to its initial state.\n   * @example\n   *   cipher.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number) {\n    super.reset(data, nBytes);\n    this._doReset();\n  }\n  \n  /**\n   * Adds data to be encrypted or decrypted.\n   * @param {Word32Array|string} dataUpdate The data to encrypt or decrypt.\n   * @return {Word32Array} The data after processing.\n   * @example\n   *   var encrypted = cipher.process('data');\n   *   var encrypted = cipher.process(wordArray);\n   */\n  public process(dataUpdate: Word32Array|string){\n    this._append(dataUpdate);\n    return this._process();\n  }\n  \n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   * @param {Word32Array|string?} dataUpdate The final data to encrypt or decrypt.\n   * @return {Word32Array} The data after final processing.\n   * @example\n   *   var encrypted = cipher.finalize();\n   *   var encrypted = cipher.finalize('data');\n   *   var encrypted = cipher.finalize(wordArray);\n   */\n  public finalize(dataUpdate?: Word32Array|string){\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n  \n    // Perform concrete-cipher logic\n    return this._doFinalize();\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doReset(): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doProcess(): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doProcessBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doFinalize(): Word32Array {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  public encryptBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  public decryptBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createEncryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new Cipher({...props, key, transformMode: Cipher.ENC_TRANSFORM_MODE});\n  }\n  \n  /**\n   * Creates this cipher in decryption mode.\n   * @param {Word32Array} key The key.\n   * @param {Partial<CipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Cipher} A cipher instance.\n   * @example\n   *   var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  public static createDecryptor(key: Word32Array, props?: Partial<CipherProps>){\n    props = typeof props === \"undefined\" ? {} : props;\n    return new Cipher({...props, key, transformMode: Cipher.DEC_TRANSFORM_MODE});\n  }\n}\n","import type {Word32Array} from \"../../Word32Array\";\nimport type {BlockCipherMode} from \"./mode/BlockCipherMode\";\nimport type {Pad} from \"./pad/type\";\nimport type {Formatter} from \"./formatter/type\";\nimport {OpenSSLFormatter} from \"./formatter/OpenSSLFormatter\";\nimport type {BlockCipher} from \"./BlockCipher\";\n\n/**\n * A collection of cipher parameters.\n *\n * @property {Word32Array} ciphertext The raw ciphertext.\n * @property {Word32Array} key The key to this ciphertext.\n * @property {Word32Array} iv The IV used in the ciphering operation.\n * @property {Word32Array} salt The salt used with a key derivation function.\n * @property {typeof BlockCipher} algorithm The cipher algorithm.\n * @property {BlockCipherMode} mode The block mode used in the ciphering operation.\n * @property {Pad} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Formatter} formatter The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams {\n  public cipherText?: Word32Array;\n  public key?: Word32Array;\n  public iv?: Word32Array;\n  public salt?: Word32Array;\n  public Algorithm?: typeof BlockCipher;\n  public mode?: BlockCipherMode;\n  public padding?: Pad;\n  public blockSize?: number;\n  public formatter: Formatter = OpenSSLFormatter;\n  \n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Partial<CipherParams>} cp An object with any of the possible cipher parameters.\n   * @example\n   *   var cipherParams = CryptoJS.lib.CipherParams.create({\n   *       ciphertext: ciphertextWordArray,\n   *       key: keyWordArray,\n   *       iv: ivWordArray,\n   *       salt: saltWordArray,\n   *       algorithm: JsCrypto.AES,\n   *       mode: JsCrypto.CBC,\n   *       padding: JsCrypto.PKCS7,\n   *       blockSize: 4,\n   *       formatter: JsCrypto.OpenSSLFormatter\n   *     });\n   */\n  public constructor(cp?: Partial<CipherParams>) {\n    if(cp){\n      this.cipherText = cp.cipherText;\n      this.key = cp.key;\n      this.iv = cp.iv;\n      this.salt = cp.salt;\n      this.Algorithm = cp.Algorithm;\n      this.mode = cp.mode;\n      this.padding = cp.padding;\n      this.blockSize = cp.blockSize;\n      this.formatter = cp.formatter || OpenSSLFormatter;\n    }\n  }\n  \n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Formatter?} formatter (Optional) The formatting strategy to use.\n   * @return {string} The stringified cipher params.\n   * @throws Error If neither the formatter nor the default formatter is set.\n   * @example\n   *   var string = cipherParams + '';\n   *   var string = cipherParams.toString();\n   *   var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  public toString(formatter?: Formatter){\n    return (formatter || this.formatter).stringify(this);\n  }\n}","import {\n  ISerializableCipher,\n  parseCipherText,\n  SerializableCipher,\n  SerializableCipherProps,\n} from \"./SerializableCipher\";\nimport type {KDF as KDFType} from \"./kdf/type\";\nimport {OpenSSLKDF} from \"./kdf/OpenSSLKDF\";\nimport type {BlockCipher} from \"./BlockCipher\";\nimport type {Word32Array} from \"../../Word32Array\";\nimport {CipherParams} from \"./CipherParams\";\nimport {OpenSSLFormatter} from \"./formatter/OpenSSLFormatter\";\n\nexport interface PasswordBasedCipherProps extends SerializableCipherProps {\n  KDF: KDFType;\n}\n\nexport const PasswordBasedCipher: ISerializableCipher<string> = {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {typeof BlockCipher} Cipher The cipher algorithm to use.\n   * @param {Word32Array|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Partial<PasswordBasedCipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {CipherParams} A cipher params object.\n   * @example\n   *   var params = JsCrypto.PasswordBasedCipher.encrypt(JsCrypto.AES, message, 'password');\n   *   var params = JsCrypto.PasswordBasedCipher.encrypt(JsCrypto.AES, message, 'password', { format: JsCrypto.OpenSSLFormatter });\n   */\n  encrypt(\n    Cipher: typeof BlockCipher,\n    message: Word32Array|string,\n    password: string,\n    props?: Partial<PasswordBasedCipherProps>,\n  ){\n    const p = props ? {...props} : {};\n    const KDF = props && props.KDF ? props.KDF : OpenSSLKDF;\n    const derivedParams = KDF.execute(password, Cipher.keySize, Cipher.ivSize);\n    \n    p.iv = derivedParams.iv;\n    const cipherParams = SerializableCipher.encrypt(Cipher, message, derivedParams.key, p);\n    \n    return new CipherParams({\n      ...cipherParams,\n      key: derivedParams.key,\n      iv: derivedParams.iv,\n      salt: derivedParams.salt,\n    });\n  },\n  \n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {typeof BlockCipher} Cipher The cipher algorithm to use.\n   * @param {CipherParams|string} cipherText The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Partial<PasswordBasedCipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {Word32Array} The plaintext.\n   * @example\n   *   var plaintext = JsCrypto.PasswordBasedCipher.decrypt(\n   *     JsCrypto.AES,\n   *     formattedCiphertext,\n   *     'password',\n   *     { format: JsCrypto.OpenSSLFormatter }\n   *   );\n   *   var plaintext = JsCrypto.PasswordBasedCipher.decrypt(\n   *     JsCrypto.AES,\n   *     ciphertextParams,\n   *     'password',\n   *     { format: JsCrypto.OpenSSLFormatter }\n   *   );\n   */\n  decrypt(\n    Cipher: typeof BlockCipher,\n    cipherText: CipherParams|string,\n    password: string,\n    props?: Partial<PasswordBasedCipherProps>,\n  ){\n    const p = props ? {...props} : {};\n    const KDF = p.KDF ? p.KDF : OpenSSLKDF;\n    const formatter = p.formatter ? p.formatter : OpenSSLFormatter;\n    const cipherTextParams = parseCipherText(cipherText, formatter);\n    const derivedParams = KDF.execute(password, Cipher.keySize, Cipher.ivSize);\n    \n    p.iv = derivedParams.iv;\n    return SerializableCipher.decrypt(Cipher, cipherTextParams, derivedParams.key, props);\n  }\n}\n","import type {Formatter} from \"./formatter/type\";\nimport {OpenSSLFormatter} from \"./formatter/OpenSSLFormatter\";\nimport type {Word32Array} from \"../../Word32Array\";\nimport type {BlockCipher, BlockCipherProps} from \"./BlockCipher\";\nimport {CipherParams} from \"./CipherParams\";\n\nexport interface SerializableCipherProps extends BlockCipherProps {\n  formatter: Formatter;\n}\n\nexport interface ISerializableCipher<K extends Word32Array|string> {\n  encrypt: (\n    cipher: typeof BlockCipher,\n    message: Word32Array|string,\n    key: K,\n    props?: Partial<SerializableCipherProps>,\n  ) => CipherParams;\n  decrypt: (\n    cipher: typeof BlockCipher,\n    cipherText: CipherParams|string,\n    key: K,\n    props?: Partial<SerializableCipherProps>,\n  ) => Word32Array;\n}\n\n/**\n * Converts serialized ciphertext to CipherParams,\n * else assumed CipherParams already and returns ciphertext unchanged.\n * @param {CipherParams|string} cipherTextParams The ciphertext.\n * @param {Formatter} formatter The formatting strategy to use to parse serialized ciphertext.\n * @return {CipherParams} The un-serialized ciphertext.\n * @example\n *   var ciphertextParams = JsCrypto.SerializableCipher.parse(ciphertextStringOrParams, format);\n */\nexport function parseCipherText(cipherTextParams: CipherParams|string, formatter: Formatter){\n  if(typeof cipherTextParams === \"string\"){\n    return formatter.parse(cipherTextParams);\n  }\n  return cipherTextParams;\n}\n\nexport const SerializableCipher: ISerializableCipher<Word32Array> = {\n  /**\n   * Encrypts a message.\n   *\n   * @param {typeof BlockCipher} Cipher The cipher algorithm to use.\n   * @param {Word32Array|string} message The message to encrypt.\n   * @param {Word32Array} key The key.\n   * @param {Partial<SerializableCipherProps>?} props (Optional) The configuration options to use for this operation.\n   * @return {CipherParams} A cipher params object.\n   * @example\n   *   var ciphertextParams = JsCrypto.SerializableCipher.encrypt(JsCrypto.AES, message, key);\n   *   var ciphertextParams = JsCrypto.SerializableCipher.encrypt(JsCrypto.AES, message, key, { iv: iv });\n   */\n  encrypt(\n    Cipher: typeof BlockCipher,\n    message: Word32Array|string,\n    key: Word32Array,\n    props?: Partial<SerializableCipherProps>,\n  ){\n    const encryptor = Cipher.createEncryptor(key, props);\n    const cipherText = encryptor.finalize(message);\n    \n    return new CipherParams({\n      cipherText,\n      key,\n      iv: encryptor.iv,\n      Algorithm: Cipher,\n      mode: encryptor.mode,\n      padding: encryptor.padding,\n      blockSize: encryptor.blockSize,\n      formatter: props?.formatter || OpenSSLFormatter,\n    });\n  },\n  \n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {typeof BlockCipher} Cipher The cipher algorithm to use.\n   * @param {CipherParams|string} cipherText The ciphertext to decrypt.\n   * @param {Word32Array} key The key.\n   * @param {Partial<SerializableCipherProps>} props (Optional) The configuration options to use for this operation.\n   * @return {Word32Array} The plaintext.\n   * @example\n   *     var plaintext = JsCrypto.SerializableCipher.decrypt(JsCrypto.AES, formattedCiphertext, key, { iv: iv, format: JsCrypto.OpenSSL });\n   *     var plaintext = JsCrypto.SerializableCipher.decrypt(JsCrypto.AES, ciphertextParams, key, { iv: iv, format: JsCrypto.OpenSSL });\n   */\n  decrypt(\n    Cipher: typeof BlockCipher,\n    cipherText: CipherParams|string,\n    key: Word32Array,\n    props?: Partial<SerializableCipherProps>,\n  ){\n    const decryptor = Cipher.createDecryptor(key, props);\n    const cipherParams = parseCipherText(cipherText, props?.formatter || OpenSSLFormatter);\n    return decryptor.finalize(cipherParams.cipherText || \"\");\n  }\n}\n","import type {Formatter} from \"./type\";\nimport {CipherParams} from \"../CipherParams\";\nimport {Word32Array} from \"../../../Word32Array\";\nimport {Base64} from \"../../../encoder/Base64\";\n\nexport const OpenSSLFormatter: Formatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   * @return {string} The OpenSSL-compatible string.\n   * @example\n   *   var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams: CipherParams){\n    // Shortcuts\n    const cipherText = cipherParams.cipherText;\n    const salt = cipherParams.salt;\n    \n    if(!cipherText){\n      return \"\";\n    }\n  \n    // Format\n    if (salt) {\n      const wordArray = new Word32Array([0x53616c74, 0x65645f5f]).concat(salt).concat(cipherText);\n      return wordArray.toString(Base64);\n    }\n    \n    return cipherText.toString(Base64);\n  },\n  \n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   * @return {CipherParams} The cipher params object.\n   * @example\n   *   var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr: string){\n    let salt;\n  \n    // Parse base64\n    const cipherText = Base64.parse(openSSLStr);\n  \n    // Shortcut\n    const ciphertextWords = cipherText.words;\n  \n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = new Word32Array(ciphertextWords.slice(2, 4));\n    \n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      cipherText.nSigBytes -= 16;\n    }\n  \n    return new CipherParams({cipherText, salt });\n  }\n}","import type {Hasher} from \"../../Hasher\";\nimport {MD5} from \"../../../../MD5\";\nimport {Word32Array} from \"../../../Word32Array\";\n\nexport interface EvpKDFProps {\n  keySize: number;\n  Hasher: typeof Hasher;\n  iterations: number;\n}\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * https://www.openssl.org/docs/man1.1.1/man3/EVP_BytesToKey.html\n *\n * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n * @property {number} iterations The number of iterations to perform. Default: 1\n */\nexport class EvpKDF {\n  protected _props?: Partial<EvpKDFProps>;\n  protected _keySize: number = 128/32;\n  protected _Hasher: typeof Hasher = MD5;\n  protected _iterations: number = 1;\n  \n  public constructor(props?: Partial<EvpKDFProps>) {\n    this._props = props;\n    \n    if(props){\n      this._keySize = typeof props.keySize !== \"undefined\" ? props.keySize : this._keySize;\n      this._Hasher = typeof props.Hasher !== \"undefined\" ? props.Hasher : this._Hasher;\n      this._iterations = typeof props.iterations !== \"undefined\" ? props.iterations : this._iterations;\n    }\n  }\n  \n  /**\n   * Derives a key from a password.\n   *\n   * @param {Word32Array|string} password The password.\n   * @param {Word32Array|string} salt A salt.\n   * @return {Word32Array} The derived key.\n   * @example\n   *   var key = kdf.compute(password, salt);\n   */\n  public compute(password: Word32Array|string, salt: Word32Array|string){\n    let block: Word32Array|undefined;\n  \n    // Init hasher\n    const hasher = new this._Hasher();\n  \n    // Initial values\n    const derivedKey = new Word32Array();\n  \n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const keySize = this._keySize;\n    const iterations = this._iterations;\n  \n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n    \n      // Iterations\n      for (let i = 1; i < iterations; i++) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n    \n      derivedKey.concat(block);\n    }\n    derivedKey.nSigBytes = keySize * 4;\n  \n    return derivedKey;\n  }\n  \n  /**\n   * Derives a key from a password.\n   *\n   * @param {Word32Array|string} password The password.\n   * @param {Word32Array|string} salt A salt.\n   * @param {Partial<EvpKDFProps>?} props (Optional) The configuration options to use for this computation.\n   *\n   * @return {Word32Array} The derived key.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var key = CryptoJS.EvpKDF(password, salt);\n   *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n   *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n   */\n  public static getKey(password: Word32Array|string, salt: Word32Array|string, props?: Partial<EvpKDFProps>){\n    return new EvpKDF(props).compute(password, salt);\n  }\n}","import {Word32Array} from \"../../../Word32Array\";\nimport {CipherParams} from \"../CipherParams\";\nimport {EvpKDF} from \"./EvpKDF\";\nimport type {KDF, KDFParams} from \"./type\";\n\nexport const OpenSSLKDF: KDF = {\n  execute(password: Word32Array|string, keySize: number, ivSize: number, salt?: Word32Array) {\n    // Generate random salt\n    if (!salt) {\n      salt = Word32Array.random(64/8);\n    }\n  \n    // Derive key and IV\n    const key = EvpKDF.getKey(password, salt, { keySize: keySize + ivSize });\n  \n    // Separate key and IV\n    const iv = new Word32Array(key.words.slice(keySize), ivSize * 4);\n    key.nSigBytes = keySize * 4;\n  \n    // Return params\n    return new CipherParams({ key, iv, salt }) as KDFParams;\n  }\n};","import type {Cipher} from \"../Cipher\";\n\nexport interface BlockCipherModeProps {\n  cipher: Cipher;\n  iv: number[]|undefined;\n}\n\n/**\n * Abstract base block cipher mode template.\n * @abstract\n */\nexport class BlockCipherMode {\n  protected _props: BlockCipherModeProps;\n  protected _cipher: Cipher;\n  protected _iv?: number[];\n  \n  public constructor(props: BlockCipherModeProps) {\n    this._props = props;\n    this._cipher = props.cipher;\n    this._iv = props.iv;\n  }\n  \n  /**\n   * @abstract\n   */\n  public processBlock(words: number[], offset: number){\n    return;\n  }\n  \n  /**\n   * Creates this mode for encryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = JsCrypto.CBC.createEncryptor(cipher, iv.words);\n   */\n  public static createEncryptor(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n  \n  /**\n   * Creates this mode for decryption.\n   * @param {BlockCipherModeProps} props\n   * @abstract\n   * @example\n   *   var mode = JsCrypto.CBC.createDecryptor(cipher, iv.words);\n   */\n  public static createDecryptor(props: BlockCipherModeProps): BlockCipherMode {\n    throw new Error(\"Not implemented yet\");\n  }\n}\n","import {BlockCipherMode, BlockCipherModeProps} from \"./BlockCipherMode\";\n\nexport interface CBCProps extends BlockCipherModeProps {\n}\n\nexport class CBC extends BlockCipherMode {\n  protected _prevBlock: number[] = [];\n  /**\n   * CBC encryptor.\n   */\n  public static Encryptor: typeof CBC = class Encryptor extends CBC {\n    /**\n     * Processes the data block at offset.\n     *\n     * @param {number[]} words The data words to operate on.\n     * @param {number} offset The offset where the block starts.\n     * @example\n     *   mode.processBlock(data.words, offset);\n     */\n    public processBlock(words: number[], offset: number){\n      // Shortcuts\n      const cipher = this._cipher;\n      const blockSize = cipher.blockSize;\n  \n      // XOR and encrypt\n      this.xorBlock(words, offset, blockSize);\n      cipher.encryptBlock(words, offset);\n  \n      // Remember this block to use with next block\n      this._prevBlock = words.slice(offset, offset + blockSize);\n    }\n  };\n  \n  /**\n   * CBC decryptor.\n   */\n  public static Decryptor: typeof CBC = class Decryptor extends CBC {\n    /**\n     * Processes the data block at offset.\n     *\n     * @param {number[]} words The data words to operate on.\n     * @param {number} offset The offset where the block starts.\n     * @example\n     *   mode.processBlock(data.words, offset);\n     */\n    public processBlock(words: number[], offset: number){\n      // Shortcuts\n      const cipher = this._cipher;\n      const blockSize = cipher.blockSize;\n    \n      // Remember this block to use with next block\n      const thisBlock = words.slice(offset, offset + blockSize);\n    \n      // Decrypt and XOR\n      cipher.decryptBlock(words, offset);\n      this.xorBlock(words, offset, blockSize);\n    \n      // This block becomes the previous block\n      this._prevBlock = thisBlock;\n    }\n    \n  };\n  \n  public constructor(props: CBCProps) {\n    super(props);\n  }\n  \n  public xorBlock(words: number[], offset: number, blockSize: number){\n    let block: number[];\n  \n    // Shortcut\n    const iv = this._iv;\n  \n    // Choose mixing block\n    if (iv){\n      block = iv;\n    \n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    else {\n      block = this._prevBlock;\n    }\n  \n    // XOR blocks\n    for (let i = 0; i < blockSize; i++) {\n      words[offset + i] ^= block[i];\n    }\n  }\n  \n  /**\n   * Creates this mode for encryption.\n   * @param {BlockCipherModeProps} props\n   * @example\n   *   var mode = JsCrypto.CBC.createEncryptor(cipher, iv.words);\n   */\n  public static createEncryptor(props: CBCProps){\n    return new CBC.Encryptor(props);\n  }\n  \n  /**\n   * Creates this mode for decryption.\n   * @param {BlockCipherModeProps} props\n   * @example\n   *   var mode = JsCrypto.CBC.createDecryptor(cipher, iv.words);\n   */\n  public static createDecryptor(props: CBCProps){\n    return new CBC.Decryptor(props);\n  }\n}\n","import {Word32Array} from \"../../../Word32Array\";\nimport type {Pad} from \"./type\";\n\n/**\n * Pads data using the algorithm defined in PKCS #5/7.\n *\n * @param {Word32Array} data The data to pad.\n * @param {number} blockSize The multiple that the data should be padded to.\n * @example\n *   JsCrypto.pad.Pkcs7.pad(wordArray, 4);\n */\nfunction pad(data: Word32Array, blockSize: number){\n  // Shortcut\n  const blockSizeBytes = blockSize * 4;\n  \n  // Count padding bytes\n  const nPaddingBytes = blockSizeBytes - data.nSigBytes % blockSizeBytes;\n  \n  // Create padding word\n  const paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n  \n  // Create padding\n  const paddingWords = [];\n  for (let i = 0; i < nPaddingBytes; i += 4) {\n    paddingWords.push(paddingWord);\n  }\n  const padding = new Word32Array(paddingWords, nPaddingBytes);\n  \n  // Add padding\n  data.concat(padding);\n}\n\n/**\n * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n *\n * @param {Word32Array} data The data to unpad.\n * @example\n *   JsCrypto.pad.Pkcs7.unpad(wordArray);\n */\nfunction unpad(data: Word32Array){\n  // Get number of padding bytes from last byte\n  const nPaddingBytes = data.words[(data.nSigBytes - 1) >>> 2] & 0xff;\n  \n  // Remove padding\n  data.nSigBytes -= nPaddingBytes;\n}\n\nexport const Pkcs7: Pad = {\n  pad,\n  unpad,\n};\n","import type {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nconst map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nexport const Base64: IEncoder = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The hex string.\n   * @example\n   *   var hexString = Hex.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    // Shortcuts\n    const words = w.words;\n    const sigBytes = w.nSigBytes;\n  \n    // Clamp excess bits\n    w.clamp();\n  \n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n  \n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n    \n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n  \n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n  \n    return base64Chars.join(\"\");\n  },\n  \n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} base64Str The hex string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Hex.parse(hexString);\n   */\n  parse(base64Str: string){\n    const Len = base64Str.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i+=2){\n      words[i >>> 3] |= parseInt(base64Str.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n    \n    return new Word32Array(words, Len / 2);\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Hex: IEncoder = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The hex string.\n   * @example\n   *   var hexString = Hex.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.nSigBytes;\n    const words = w.words;\n    const hexChars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((byte >>> 4).toString(16));\n      hexChars.push((byte & 0x0f).toString(16));\n    }\n    \n    return hexChars.join(\"\");\n  },\n  \n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Hex.parse(hexString);\n   */\n  parse(hexStr: string){\n    const Len = hexStr.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i+=2){\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n    \n    return new Word32Array(words, Len / 2);\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Latin1: IEncoder = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The Latin1 string.\n   * @example\n   *   var latin1String = Latin1.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.nSigBytes;\n    const words = w.words;\n    const latin1Chars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(byte));\n    }\n    \n    return latin1Chars.join(\"\");\n  },\n  \n  /**\n   * Converts a latin1 string to a word array.\n   *\n   * @param {string} latin1Str The latin1 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Latin1.parse(latin1Str);\n   */\n  parse(latin1Str: string){\n    const Len = latin1Str.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i++){\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n    \n    return new Word32Array(words, Len);\n  }\n}\n","import type {IEncoder} from \"../type\";\nimport {Latin1} from \"./Latin1\";\nimport type {Word32Array} from \"../Word32Array\";\n\nexport const Utf8: IEncoder = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The UTF-8 string.\n   * @example\n   *   var utf8String = Utf8.stringify(new Word32Array([0x293892]));\n   */\n  stringify(w: Word32Array){\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(w)));\n    }\n    catch (e) {\n      throw new Error(\"Malformed UTF-8 data\");\n    }\n  },\n  \n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Utf8.parse(utf8Str);\n   */\n  parse(utf8Str: string){\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n}\n","interface WindowEx extends Window {\n  /**\n   * Native (experimental IE 11) crypto from window (Browser)\n   */\n  msCrypto?: Crypto;\n}\n\n/**\n * @ignore\n */\ndeclare let window: WindowEx;\ntype NodeCrypto = { randomBytes: (size: number) => { readInt32LE: () => number } };\n\nfunction makeRandFunction(): () => number {\n  if (typeof window !== \"undefined\") {\n    const c = window.crypto || window.msCrypto;\n    if (!c) {\n      throw new Error(\"Crypto module not found\");\n    }\n    return function rand(){\n      return (c as Crypto).getRandomValues(new Uint32Array(1))[0];\n    };\n  }\n  else if (typeof global !== \"undefined\" && global.crypto) {\n    return function rand(){\n      return ((global.crypto as unknown) as NodeCrypto).randomBytes(4).readInt32LE();\n    };\n  }\n  else if(typeof require === \"function\"){\n    return function rand(){\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return (__non_webpack_require__(\"crypto\") as NodeCrypto).randomBytes(4).readInt32LE();\n    }\n  }\n  throw new Error(\"Unable to find crypto module\");\n}\n\nexport const random = makeRandFunction();\n"],"sourceRoot":""}