{"version":3,"sources":["webpack://JsCrypto/webpack/universalModuleDefinition","webpack://JsCrypto/webpack/bootstrap","webpack://JsCrypto/(webpack)/buildin/global.js","webpack://JsCrypto/./src/SHA3.ts","webpack://JsCrypto/./src/lib/Word32Array.ts","webpack://JsCrypto/./src/lib/Word64Array.ts","webpack://JsCrypto/./src/lib/algorithm/BufferedBlockAlgorithm.ts","webpack://JsCrypto/./src/lib/algorithm/Hasher.ts","webpack://JsCrypto/./src/lib/encoder/Hex.ts","webpack://JsCrypto/./src/lib/encoder/Latin1.ts","webpack://JsCrypto/./src/lib/encoder/Utf8.ts","webpack://JsCrypto/./src/lib/random.ts"],"names":[],"mappings":"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","file":"SHA3.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsCrypto\"] = factory();\n\telse\n\t\troot[\"JsCrypto\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/SHA3.ts\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Constants tables\nimport {Word64} from \"./lib/Word64Array\";\nimport {Hasher, HasherProps} from \"./lib/algorithm/Hasher\";\nimport {Word32Array} from \"./lib/Word32Array\";\n\nexport interface SHA3Props extends HasherProps {\n  state: Word64[];\n  outputLength: number;\n}\n\nconst RHO_OFFSETS: number[] = [];\nconst PI_INDEXES: number[]  = [];\nconst ROUND_CONSTANTS: Word64[] = [];\n\n// Compute Constants\n(function computeConstants() {\n  // Compute rho offset constants\n  let x = 1;\n  let y = 0;\n  for (let t = 0; t < 24; t++) {\n    RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n    \n    const newX = y % 5;\n    const newY = (2 * x + 3 * y) % 5;\n    x = newX;\n    y = newY;\n  }\n  \n  // Compute pi index constants\n  for (let p = 0; p < 5; p++) {\n    for (let q = 0; q < 5; q++) {\n      PI_INDEXES[p + 5 * q] = q + ((2 * p + 3 * q) % 5) * 5;\n    }\n  }\n  \n  // Compute round constants\n  let LFSR = 0x01;\n  for (let i = 0; i < 24; i++) {\n    let roundConstantMsw = 0;\n    let roundConstantLsw = 0;\n    \n    for (let j = 0; j < 7; j++) {\n      if (LFSR & 0x01) {\n        const bitPosition = (1 << j) - 1;\n        if (bitPosition < 32) {\n          roundConstantLsw ^= 1 << bitPosition;\n        } else /* if (bitPosition >= 32) */ {\n          roundConstantMsw ^= 1 << (bitPosition - 32);\n        }\n      }\n      \n      // Compute next LFSR\n      if (LFSR & 0x80) {\n        // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n        LFSR = (LFSR << 1) ^ 0x71;\n      } else {\n        LFSR <<= 1;\n      }\n    }\n    \n    ROUND_CONSTANTS[i] = new Word64(roundConstantMsw, roundConstantLsw);\n  }\n}());\n\n// Reusable objects for temporary values\nconst T: Word64[] = [];\n(function () {\n  for(let i = 0; i < 25; i++) {\n    T[i] = new Word64(0, 0);\n  }\n}());\n\nexport class SHA3 extends Hasher {\n  protected _props?: Partial<SHA3Props>;\n  protected _blockSize = 1024/32;\n  protected _state: Word64[] = []\n  protected _outputLength: number = 512;\n  \n  public constructor(props?: Partial<SHA3Props>) {\n    super(props);\n    this._props = props;\n    \n    if(props){\n      if(typeof props.outputLength !== \"undefined\"){\n        if(![224,256,384,512].includes(props.outputLength)){\n          throw new Error(\"Unsupported output length.\");\n        }\n        this._outputLength = props.outputLength;\n      }\n      if(typeof props.state !== \"undefined\"){\n        this._state = props.state.map(s => s.clone());\n      }\n    }\n    \n    if(this._state.length === 0){\n      for(let i=0;i<25;i++){\n        this._state[i] = new Word64(0, 0);\n      }\n    }\n    \n    this._blockSize = (1600 - 2*this._outputLength) / 32;\n  }\n  \n  protected _doReset() {\n    this._state = [];\n    for(let i=0;i<25;i++){\n      this._state[i] = new Word64(0, 0);\n    }\n    this._blockSize = (1600 - 2*this._outputLength) / 32;\n  }\n  \n  protected _doProcessBlock(words: number[], offset: number) {\n    // Shortcuts\n    const state = this._state;\n    const nBlockSizeLanes = this._blockSize / 2;\n  \n    // Absorb\n    for(let i = 0; i < nBlockSizeLanes; i++) {\n      // Shortcuts\n      let W2i  = words[offset + 2 * i];\n      let W2i1 = words[offset + 2 * i + 1];\n    \n      // Swap endian\n      W2i = (\n        (((W2i << 8)  | (W2i >>> 24)) & 0x00ff00ff) |\n        (((W2i << 24) | (W2i >>> 8))  & 0xff00ff00)\n      );\n      W2i1 = (\n        (((W2i1 << 8)  | (W2i1 >>> 24)) & 0x00ff00ff) |\n        (((W2i1 << 24) | (W2i1 >>> 8))  & 0xff00ff00)\n      );\n    \n      // Absorb message into state\n      state[i].high ^= W2i1;\n      state[i].low  ^= W2i;\n    }\n  \n    // Rounds\n    for (let round = 0; round < 24; round++) {\n      // Theta\n      for (let x = 0; x < 5; x++) {\n        // Mix column lanes\n        let tMsw = 0;\n        let tLsw = 0;\n        for (let y = 0; y < 5; y++) {\n          const l = state[x + 5 * y];\n          tMsw ^= l.high;\n          tLsw ^= l.low;\n        }\n      \n        // Temporary values\n        const Tx = T[x];\n        Tx.high = tMsw;\n        Tx.low  = tLsw;\n      }\n      for (let x = 0; x < 5; x++) {\n        // Shortcuts\n        const Tx4 = T[(x + 4) % 5];\n        const Tx1 = T[(x + 1) % 5];\n        const Tx1Msw = Tx1.high;\n        const Tx1Lsw = Tx1.low;\n      \n        // Mix surrounding columns\n        const tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n        const tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n        for (let y = 0; y < 5; y++) {\n          const l = state[x + 5 * y];\n          l.high ^= tMsw;\n          l.low  ^= tLsw;\n        }\n      }\n    \n      // Rho Pi\n      for (let laneIndex = 1; laneIndex < 25; laneIndex++) {\n        let tMsw: number;\n        let tLsw: number;\n      \n        // Shortcuts\n        const laneMsw = state[laneIndex].high;\n        const laneLsw = state[laneIndex].low;\n        const rhoOffset = RHO_OFFSETS[laneIndex];\n      \n        // Rotate lanes\n        if (rhoOffset < 32) {\n          tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n          tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n        } else /* if (rhoOffset >= 32) */ {\n          tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n          tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n        }\n      \n        // Transpose lanes\n        const TPiLane = T[PI_INDEXES[laneIndex]];\n        TPiLane.high = tMsw;\n        TPiLane.low  = tLsw;\n      }\n    \n      // Rho pi at x = y = 0\n      const T0 = T[0];\n      const state0 = state[0];\n      T0.high = state0.high;\n      T0.low  = state0.low;\n    \n      // Chi\n      for (let x = 0; x < 5; x++) {\n        for (let y = 0; y < 5; y++) {\n          // Shortcuts\n          const laneIndex = x + 5 * y;\n          const l = state[laneIndex];\n          const TLane = T[laneIndex];\n          const Tx1Lane = T[((x + 1) % 5) + 5 * y];\n          const Tx2Lane = T[((x + 2) % 5) + 5 * y];\n        \n          // Mix rows\n          l.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n          l.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n        }\n      }\n    \n      // Iota\n      const lane = state[0];\n      const roundConstant = ROUND_CONSTANTS[round];\n      lane.high ^= roundConstant.high;\n      lane.low  ^= roundConstant.low;\n    }\n  }\n  \n  protected _doFinalize(): Word32Array {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.raw();\n    const nBitsLeft = data.length() * 8;\n    const blockSizeBits = this.blockSize * 32;\n  \n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n    dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n    data.setSignificantBytes(dataWords.length * 4);\n  \n    // Hash final blocks\n    this._process();\n  \n    // Shortcuts\n    const state = this._state;\n    const outputLengthBytes = this._outputLength / 8;\n    const outputLengthLanes = outputLengthBytes / 8;\n  \n    // Squeeze\n    const hashWords = [];\n    for (let i = 0; i < outputLengthLanes; i++) {\n      // Shortcuts\n      const lane = state[i];\n      let laneMsw = lane.high;\n      let laneLsw = lane.low;\n    \n      // Swap endian\n      laneMsw = (\n        (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n        (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n      );\n      laneLsw = (\n        (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n        (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n      );\n    \n      // Squeeze state to retrieve hash\n      hashWords.push(laneLsw);\n      hashWords.push(laneMsw);\n    }\n  \n    // Return final computed hash\n    return new Word32Array(hashWords, outputLengthBytes);\n  }\n  \n  public clone(){\n    const props = {\n      outputLength: this._outputLength,\n      state: this._state,\n      blockSize: this._blockSize,\n      data: this._data,\n      nBytes: this._nBytes,\n    };\n    return new SHA3(props);\n  }\n  \n  public static hash(message: Word32Array|string, props?: SHA3Props){\n    return new SHA3(props).finalize(message);\n  }\n}","import {IEncoder} from \"./type\";\nimport {Hex} from \"./encoder/Hex\";\nimport {random} from \"./random\";\n\n/**\n * An array of 32bit words\n */\nexport class Word32Array {\n  private readonly _words: number[];\n  private _nSignificantBytes: number;\n  \n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} nSignificantBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *   var wordArray = new WordArray();\n   *   var wordArray = new WordArray([0x00010203, 0x04050607]);\n   *   var wordArray = new WordArray([0x00010203, 0x04050607], 6);\n   */\n  public constructor(words?: number[], nSignificantBytes?: number) {\n    this._words = words || [];\n    this._nSignificantBytes = typeof nSignificantBytes === \"number\" ? nSignificantBytes : this._words.length * 4;\n  }\n  \n  /**\n   * Get raw reference of internal words.\n   * Modification of this raw array will affect internal words.\n   */\n  public raw(){\n    return this._words;\n  }\n  \n  /**\n   * Return a copy of an array of 32-bit words.\n   */\n  public slice(start?: number, end?: number){\n    return this._words.slice(start, end);\n  }\n  \n  /**\n   * Return significantBytes\n   */\n  public length(){\n    return this._nSignificantBytes;\n  }\n  \n  /**\n   * Set significant bytes\n   * @param {number} n - significant bytes\n   */\n  public setSignificantBytes(n: number){\n    this._nSignificantBytes = n;\n  }\n  \n  /**\n   * Converts this word array to a string.\n   *\n   * @param {IEncoder?} encoder The encoding strategy to use. Default: CryptoJS.enc.Hex\n   * @return {string} The stringified word array.\n   * @example\n   *   var string = wordArray + '';\n   *   var string = wordArray.toString();\n   *   var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  public toString(encoder?: IEncoder){\n    if(!encoder){\n      return Hex.stringify(this);\n    }\n    return encoder.stringify(this);\n  }\n  \n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {Word32Array} w The word array to append.\n   * @return {Word32Array} This word array.\n   * @example\n   *   wordArray1.concat(wordArray2);\n   */\n  public concat(w: Word32Array){\n    const words = w.slice();\n    const N = w.length();\n    \n    this.clamp();\n  \n    if(this._nSignificantBytes % 4){\n      // Copy one byte at a time\n      for(let i=0;i<N;i++){\n        const b = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        this._words[(this._nSignificantBytes + i) >>> 2] |= b << (24 - ((this._nSignificantBytes + i) % 4) * 8);\n      }\n    }\n    else {\n      // Copy one word at a time\n      for(let i=0;i<N;i+=4) {\n        this._words[(this._nSignificantBytes + i) >>> 2] = words[i >>> 2];\n      }\n    }\n    \n    this._nSignificantBytes += N;\n  \n    // Chainable\n    return this;\n  }\n  \n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *   wordArray.clamp();\n   */\n  public clamp(){\n    const n = this._nSignificantBytes;\n    this._words[n >>> 2] &= 0xffffffff << (32 - (n % 4) * 8);\n    this._words.length = Math.ceil(n / 4);\n  }\n  \n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {Word32Array} The clone.\n   * @example\n   *   var clone = wordArray.clone();\n   */\n  public clone(){\n    return new Word32Array(this._words.slice(), this._nSignificantBytes);\n  }\n  \n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   * @return {Word32Array} The random word array.\n   * @static\n   * @example\n   *   var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  public static random(nBytes: number){\n    const words: number[] = [];\n    \n    for(let i=0;i<nBytes;i++){\n      words.push(random());\n    }\n    \n    return new Word32Array(words, nBytes);\n  }\n}\n","import {IEncoder} from \"./type\";\nimport {Hex} from \"./encoder/Hex\";\nimport {Word32Array} from \"./Word32Array\";\n\nexport class Word64 {\n  public high: number;\n  public low: number;\n  \n  public constructor(high: number, low: number) {\n    this.high = high;\n    this.low = low;\n  }\n  \n  public clone(){\n    return new Word64(this.high, this.low);\n  }\n}\n\n/**\n * An array of 64bit words\n */\nexport class Word64Array {\n  private readonly _words: Word64[];\n  private _nSignificantBytes: number;\n  \n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} nSignificantBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *   var wordArray = new WordArray();\n   *   var wordArray = new WordArray([0x00010203, 0x04050607]);\n   *   var wordArray = new WordArray([0x00010203, 0x04050607], 6);\n   */\n  public constructor(words?: Word64[], nSignificantBytes?: number) {\n    this._words = words || [];\n    this._nSignificantBytes = typeof nSignificantBytes === \"number\" ? nSignificantBytes : this._words.length * 8;\n  }\n  \n  /**\n   * Converts this 64-bit word array to a 32-bit word array.\n   *\n   * @return {Word32Array} This word array's data as a 32-bit word array.\n   *\n   * @example\n   *\n   *     var x32WordArray = x64WordArray.toX32();\n   */\n  public to32(){\n    const words32: number[] = [];\n    for(let i=0;i<this._words.length;i++){\n      const word64 = this._words[i];\n      words32.push(word64.high);\n      words32.push(word64.low);\n    }\n    return new Word32Array(words32, this._nSignificantBytes);\n  }\n  \n  /**\n   * Get raw reference of internal words.\n   * Modification of this raw array will affect internal words.\n   */\n  public raw(){\n    return this._words;\n  }\n  \n  /**\n   * Return a copy of an array of 32-bit words.\n   */\n  public slice(){\n    return this._words.slice();\n  }\n  \n  /**\n   * Return significantBytes\n   */\n  public length(){\n    return this._nSignificantBytes;\n  }\n  \n  /**\n   * Set significant bytes\n   * @param {number} n - significant bytes\n   */\n  public setSignificantBytes(n: number){\n    this._nSignificantBytes = n;\n  }\n  \n  /**\n   * Converts this word array to a string.\n   *\n   * @param {IEncoder?} encoder The encoding strategy to use. Default: CryptoJS.enc.Hex\n   * @return {string} The stringified word array.\n   * @example\n   *   var string = wordArray + '';\n   *   var string = wordArray.toString();\n   *   var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  public toString(encoder?: IEncoder){\n    if(!encoder){\n      return Hex.stringify(this.to32());\n    }\n    return encoder.stringify(this.to32());\n  }\n  \n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {Word64Array} The clone.\n   * @example\n   *   var clone = wordArray.clone();\n   */\n  public clone(){\n    const words = this._words.slice();\n    for(let i=0;i<words.length;i++){\n      words[i] = words[i].clone();\n    }\n    return new Word64Array(words, this._nSignificantBytes);\n  }\n}\n","import {Word32Array} from \"../Word32Array\";\nimport {Utf8} from \"../encoder/Utf8\";\n\nexport interface BufferedBlockAlgorithmProps {\n  data: Word32Array;\n  nBytes: number;\n}\n\nexport class BufferedBlockAlgorithm {\n  protected _props?: Partial<BufferedBlockAlgorithmProps>;\n  protected _data: Word32Array;\n  protected _nBytes: number;\n  protected _minBufferSize: number = 0;\n  protected _blockSize: number = 0;\n  \n  public constructor(props?: Partial<BufferedBlockAlgorithmProps>) {\n    this._props = props;\n    this._data = props && typeof props.data !== \"undefined\" ? props.data.clone() : new Word32Array();\n    this._nBytes = props && typeof props.nBytes === \"number\" ? props.nBytes : 0;\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *   bufferedBlockAlgorithm.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    this._data = typeof data !== \"undefined\" ? data.clone() : new Word32Array();\n    this._nBytes = typeof nBytes === \"number\" ? nBytes : 0;\n  }\n  \n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {Word32Array|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n   * @example\n   *   bufferedBlockAlgorithm.append('data');\n   *   bufferedBlockAlgorithm.append(wordArray);\n   */\n  protected _append(data: Word32Array|string){\n    if(typeof data === \"string\"){\n      data = Utf8.parse(data);\n    }\n    \n    this._data.concat(data);\n    this._nBytes += data.length();\n  }\n  \n  /**\n   * Processes available data blocks.\n   * This method invokes doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean?} doFlush Whether all blocks and partial blocks should be processed.\n   * @return {Word32Array} The processed data.\n   * @example\n   *   var processedData = bufferedBlockAlgorithm.process();\n   *   var processedData = bufferedBlockAlgorithm.process(!!'flush');\n   */\n  protected _process(doFlush?: boolean){\n    let processedWords: number[]|undefined;\n    const words = this._data.raw();\n    const nSigBytes = this._data.length();\n    const blockSize = this._blockSize;\n    const blockSizeByte = this._blockSize * 4;\n    \n    let nBlocksReady = nSigBytes / blockSizeByte;\n    if(doFlush){\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    }\n    else{\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    \n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n    \n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, nSigBytes);\n    \n    // Process blocks\n    if(nWordsReady){\n      for(let offset=0;offset<nWordsReady;offset+=blockSize){\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(words, offset);\n      }\n      \n      // Remove processed words\n      processedWords = words.splice(0, nWordsReady);\n      this._data.setSignificantBytes(this._data.length() - nBytesReady);\n    }\n    \n    // Return processed words\n    return new Word32Array(processedWords, nBytesReady);\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doProcessBlock(words: number[], offset: number): void {\n    throw new Error(\"Not implemented\")\n  }\n}","import {BufferedBlockAlgorithm, BufferedBlockAlgorithmProps} from \"./BufferedBlockAlgorithm\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport interface HasherProps extends BufferedBlockAlgorithmProps {\n  blockSize: number;\n}\n\nexport class Hasher extends BufferedBlockAlgorithm {\n  protected _props?: Partial<HasherProps>;\n  protected _blockSize: number = 512/32;\n  \n  public constructor(props?: Partial<HasherProps>){\n    super(props);\n    this._props = props;\n    if(props && typeof props.blockSize === \"number\"){\n      this._blockSize = props.blockSize;\n    }\n    this.reset(props ? props.data : undefined, props ? props.nBytes : undefined);\n  }\n  \n  public get blockSize(){\n    return this._blockSize;\n  }\n  \n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *   hasher.reset();\n   */\n  public reset(data?: Word32Array, nBytes?: number){\n    // Reset data buffer\n    super.reset.call(this, data, nBytes);\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n  \n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {Word32Array|string} messageUpdate The message to append.\n   * @return {Hasher} This hasher.\n   * @example\n   *   hasher.update('message');\n   *   hasher.update(wordArray);\n   */\n  public update(messageUpdate: Word32Array|string){\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  \n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {Word32Array|string?} messageUpdate (Optional) A final message update.\n   * @return {Word32Array} The hash.\n   * @example\n   *   var hash = hasher.finalize();\n   *   var hash = hasher.finalize('message');\n   *   var hash = hasher.finalize(wordArray);\n   */\n  public finalize(messageUpdate?: Word32Array|string){\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  \n    // Perform concrete-hasher logic\n    return this._doFinalize();\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doReset(): void {\n    throw new Error(\"Not implemented\");\n  }\n  \n  /**\n   * @abstract\n   */\n  protected _doFinalize(): Word32Array {\n    throw new Error(\"Not implemented\");\n  }\n}\n","import {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Hex: IEncoder = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The hex string.\n   * @example\n   *   var hexString = Hex.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.length();\n    const words = w.raw();\n    const hexChars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((byte >>> 4).toString(16));\n      hexChars.push((byte & 0x0f).toString(16));\n    }\n    \n    return hexChars.join(\"\");\n  },\n  \n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Hex.parse(hexString);\n   */\n  parse(hexStr: string){\n    const Len = hexStr.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i+=2){\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n    \n    return new Word32Array(words, Len / 2);\n  }\n}\n","import {IEncoder} from \"../type\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Latin1: IEncoder = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The Latin1 string.\n   * @example\n   *   var latin1String = Latin1.stringify([0x293892], 6);\n   */\n  stringify(w: Word32Array){\n    const nSig = w.length();\n    const words = w.raw();\n    const latin1Chars: string[] = [];\n    \n    for(let i=0;i<nSig;i++){\n      const byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(byte));\n    }\n    \n    return latin1Chars.join(\"\");\n  },\n  \n  /**\n   * Converts a latin1 string to a word array.\n   *\n   * @param {string} latin1Str The latin1 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Latin1.parse(latin1Str);\n   */\n  parse(latin1Str: string){\n    const Len = latin1Str.length;\n    const words: number[] = [];\n    \n    for(let i=0;i<Len;i++){\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n    \n    return new Word32Array(words, Len);\n  }\n}\n","import {IEncoder} from \"../type\";\nimport {Latin1} from \"./Latin1\";\nimport {Word32Array} from \"../Word32Array\";\n\nexport const Utf8: IEncoder = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {Word32Array} w An array of 32-bit words.\n   * @return {string} The UTF-8 string.\n   * @example\n   *   var utf8String = Utf8.stringify(new Word32Array([0x293892]));\n   */\n  stringify(w: Word32Array){\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(w)));\n    }\n    catch (e) {\n      throw new Error(\"Malformed UTF-8 data\");\n    }\n  },\n  \n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   * @return {Word32Array} The word array.\n   * @example\n   *   var wordArray = Utf8.parse(utf8Str);\n   */\n  parse(utf8Str: string){\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n}\n","interface WindowEx extends Window {\n  /**\n   * Native (experimental IE 11) crypto from window (Browser)\n   */\n  msCrypto?: Crypto;\n}\n\n/**\n * @ignore\n */\ndeclare let window: WindowEx;\ntype NodeCrypto = { randomBytes: (size: number) => { readInt32LE: () => number } };\n\nfunction makeRandFunction(): () => number {\n  if (typeof window !== \"undefined\") {\n    const c = window.crypto || window.msCrypto;\n    if (!c) {\n      throw new Error(\"Crypto module not found\");\n    }\n    return function rand(){\n      return (c as Crypto).getRandomValues(new Uint32Array(1))[0];\n    };\n  }\n  else if (typeof global !== \"undefined\" && global.crypto) {\n    return function rand(){\n      return ((global.crypto as unknown) as NodeCrypto).randomBytes(4).readInt32LE();\n    };\n  }\n  else if(typeof require === \"function\"){\n    return function rand(){\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return (__non_webpack_require__(\"crypto\") as NodeCrypto).randomBytes(4).readInt32LE();\n    }\n  }\n  throw new Error(\"Unable to find crypto module\");\n}\n\nexport const random = makeRandFunction();\n"],"sourceRoot":""}